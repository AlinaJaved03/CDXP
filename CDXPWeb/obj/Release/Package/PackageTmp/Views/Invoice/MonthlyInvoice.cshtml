@{
    ViewBag.Title = "Monthly Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="pcontent">


    <script src="~/Content/dist/js/ecommerce-data.js"></script>
    <script src="~/Content/filereader.js"></script>
    <script src="~/Content/jquery.csv.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.0.0/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.21.15/plugins/export/libs/FileSaver.js/FileSaver.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip-utils/0.1.0/jszip-utils.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.3/FileSaver.min.js"></script>

    <style type="text/css">

        #myModal {
            height: 500px !important;
        }

        .radio input[type="radio"] {
            opacity: 1 !important;
            padding-left: 5px !important;
            height: 20px;
            width: 20px;
            cursor: pointer !important;
        }

        .btn-blk-delete {
            font-size: 18px;
            cursor: pointer !important;
        }

        .selectize-input {
            background-color: rgb(251, 255, 193) !important;
            border-radius: 0px !important;
        }

            .selectize-input:after {
                border-width: 7px 3px 0 3px !important;
                right: 7px !important;
            }

            .selectize-input.dropdown-active:after {
                border-width: 0px 3px 7px 3px !important;
            }

        .table-striped > tbody > tr {
            background-color: rgba(33, 33, 33, 0.05) !important;
        }

        .tblFrm {
            width: 100%;
        }

            .tblFrm tr td {
                border: 0px solid white !important;
            }

                .tblFrm tr td:nth-child(odd) {
                    padding-left: 4% !important;
                    vertical-align: top;
                    padding-top: 20px !important;
                }

            .tblFrm input[type=text] {
                font-size: 14px;
                font-weight: 400;
                height: 35px;
            }

            .tblFrm select {
                height: 35px;
            }

            .tblFrm label {
                font-weight: 700;
                padding-top: 0px;
            }



        .table > thead > tr > th {
            font-weight: 800;
        }
        /*.table > thead > tr > th, .table > tbody > tr > td {
                padding: 0px !important;
                font-size: 12px !important;
                border-top: 0px solid white !important;
            }*/
        input[type=password][disabled], input[type=text][disabled], input[type=file][disabled], input:not([type])[disabled], textarea[disabled], select[disabled], .sp-peoplepicker-topLevelDisabled, .ms-inputBoxDisabled {
            color: black !important;
        }

        select {
            padding: 6px 0px !important;
        }

        body {
            color: black !important;
        }

        button {
            min-width: 0px;
        }

        div.remarks-wrap {
            width: 99%;
            margin: 0 auto 1em auto;
            position: relative;
        }

            div.remarks-wrap:first-child {
                margin-top: 1em;
            }

        div.remarks-comment {
            font-size: 1em;
            position: relative;
            margin-left: 60px;
            border-radius: 0.75em 0.75em 0.75em 0.75em;
            background: #f9f9f9;
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ebebeb', endColorstr='#ffffff', GradientType=0 );
            line-height: 1.4em;
            font-family: Helvetica;
            padding-bottom: 10px;
            padding-top: 1px
        }

            div.remarks-comment::before {
                content: attr(data-owner);
                border-radius: 0.75em 0.75em 0 0;
                background: rgba(235,235,235,1);
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ebebeb', endColorstr='#ffffff', GradientType=0 );
                display: block;
                text-indent: 2%;
                border-bottom: 1px solid skyblue;
                height: 25px;
                padding-top: 5px;
            }

            div.remarks-comment::after {
                content: '';
                position: absolute;
                top: 50%;
                left: 0;
                border: 10px solid transparent;
                border-right: 10px solid rgb(247, 247, 247);
                margin: -10px 0 0 -20px;
            }

            div.remarks-comment p {
                width: 96%;
                margin: 5px auto 3px auto;
                font-size: 13px;
            }

        .remarks-img {
            position: absolute;
            top: 50%;
            width: 50px;
            float: left;
            border-radius: 10px;
            margin-top: -25px;
        }

        p + ol.postscript {
            width: 80%;
            font-size: 0.8em;
            margin: -0.5em auto 0 auto;
        }

        ol.postscript::after {
            content: '';
            height: 0.5em;
            display: block;
            clear: both;
        }

        ol.postscript li {
            float: left;
            margin-right: 0.5em;
        }

            ol.postscript li.date {
                float: right;
                margin-right: 0;
            }

        .remarks-wrap a:link,
        .remarks-wrap a:visited {
            color: #333;
            text-decoration: none;
            border-bottom: 1px solid #333;
        }

        .remarks-wrap a:hover,
        .remarks-wrap a:active,
        .remarks-wrap a:focus {
            color: #f00;
            border-bottom: 1px solid #f00;
        }

        .files {
            border: 1px solid gray;
            margin: 10px;
            padding: 5px;
            /* background: #f6f6f6;*/
        }

            .files > .filedelete {
                float: right;
            }

        .ui-dialog {
            z-index: 1050;
        }

        .ui-dialog-content .input-group .form-control, .ui-dialog-content .selectize-input input {
            z-index: 1060;
        }
    </style>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding: 0px;">
            <div class="panel panel-default card-view panel-refresh">
                <div class="refresh-container">
                    <div class="la-anim-1"></div>
                </div>
                <div class="panel-heading">
                    <div class="pull-left" style="display: inline-flex;">
                        <i class="fa fa-wpforms" style="padding-top: 4px;margin-right: 5px;color:#fff;"></i>
                        <h6 class="panel-title txt-light">@ViewBag.Title</h6>
                    </div>
                    <div class="pull-right">
                        <a class="pull-left inline-block mr-15" data-toggle="collapse" href="#collapse_1" aria-expanded="true">
                            <i class="zmdi zmdi-chevron-down"></i>
                            <i class="zmdi zmdi-chevron-up"></i>
                        </a>


                        <a href="#" class="pull-left inline-block full-screen mr-15">
                            <i class="zmdi zmdi-fullscreen"></i>
                        </a>
                        @*<a class="pull-left inline-block close-panel" href="#" data-effect="fadeOut">
                                <i class="zmdi zmdi-close"></i>
                            </a>*@
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="collapse_1" class="panel-wrapper collapse in">
                    <div class="panel-body" style="min-height: 300px;">
                        @*====Body Start===*@
                        @*<div class="container" enctype="multipart/form-data" method="POST" id="myForm">
                            <strong style="font-size:18px; color:black;">Invoice Submission (Monthly / Hourly)</strong>
                            <strong id="monthlyMode" style="font-size:16px; color:black;float:right;">Create</strong>
                            <hr style="border-width:1px; margin-bottom:0px;"><br>*@
                        <div class="tab0">
                            &nbsp;<div class="tab1">&nbsp;Invoice Submission (Monthly / Hourly)</div>
                            <strong id="monthlyMode" style="font-size:16px; color:black;float:right;">Create</strong>
                            <div class="tab2">&nbsp;</div>
                        </div>
                        <div style="background-color: white;">
                            <table class="table tblFrm" id="tblHeader" style="color: #4F4F4F;">
                                <tr style="background-color: white;display:none;">
                                    <td>
                                        <label for="TransactionNumber">
                                            Transaction
                                            No
                                        </label>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="width: 171px;" id="TransactionNumber" name="TransactionNumber" readonly>
                                    </td>
                                    <td>
                                        <label for="creationdate" style="margin-left: 20px;">
                                            Creation Date
                                        </label>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" id="creationdate" name="creationdate" readonly>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="powerProducer">Power Producer</label>
                                    </td>
                                    <td>
                                        <input tabindex="-1" type="text" class="form-control frm" id="powerProducer" value="" readonly name="powerProducer">
                                    </td>
                                    <td>
                                        <label for="submitDate" style="margin-left: 20px;">
                                            Submit Date
                                        </label>
                                    </td>
                                    <td>
                                        <input tabindex="-1" type="text" class="form-control" id="submitDate" name="submitDate" readonly>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="producerSite">Producer Site</label>
                                    </td>
                                    <td>
                                        <select tabindex="-1" class="form-control frm" id="producerSite" name="producerSite" required="">
                                            <option value="0">Select</option>
                                        </select>
                                    </td>
                                    <td>
                                        <label for="status" style="margin-left: 20px;">
                                            Status
                                        </label>
                                    </td>
                                    <td>
                                        <input tabindex="-1" type="text" class="form-control frm" id="status" name="status" readonly required="">
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoiceType">Invoice Type<span style="color:rgb(0, 149, 235);">*</span></label>
                                    </td>
                                    <td>
                                        <select tabindex="1" class="form-control frm getBloks" id="invoiceType" name="invoiceType" required="required">
                                            <option value="0">Select</option>
                                        </select>
                                    </td>
                                    <td>
                                        <label for="invoiceDueDate" style="margin-left: 20px;">
                                            Payment Due Date<span style="color:rgb(0, 149, 235);">*</span>
                                        </label>
                                    </td>
                                    <td>
                                        <input tabindex="8" style="background-color:rgb(251, 255, 193);" type="text" class="form-control frm" onchange="datefun(this);" id="invoiceDueDate" name="invoiceDueDate" style="background-color:white;" readonly="readonly">
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoiceLetterNumber">
                                            Invoice No<span style="color:rgb(0, 149, 235);">*</span>
                                        </label>
                                    </td>
                                    <td>
                                        <input tabindex="2" style="background-color:rgb(251, 255, 193);" type="text" class="form-control frm" id="invoiceLetterNumber" name="invoiceLetterNumber" required="" maxlength="50">
                                    </td>
                                    <td>
                                        <label for="parentInvoice" style="margin-left: 20px;">
                                            Parent Invoice<span id="parentstar" style="color:rgb(0, 149, 235); display:none;">*</span>
                                        </label>
                                    </td>
                                    <td>
                                        <select tabindex="-1" class="form-control frm" id="parentInvoice" name="parentInvoice" required="" disabled>
                                            <option value="-1" selected="selected">Select</option>
                                            <option value="0">None</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoiceDate">
                                            Invoice Date<span style="color:rgb(0, 149, 235);">*</span>
                                        </label>
                                    </td>
                                    <td>
                                        <input tabindex="3" style="background-color:rgb(251, 255, 193);" type="text" maxlength="11" class="form-control frm" id="invoiceDate" name="invoiceDate" readonly>
                                    </td>
                                    <td>
                                        <label style="margin-left:20px;" for="currency">Currency</label>
                                    </td>
                                    <td>
                                        <select tabindex="-1" class="form-control frm" id="currency" name="currency" required="" disabled="">
                                            <option value="">Select</option>
                                            <option value="EUR">EUR</option>
                                            <option value="GBP">GBP</option>
                                            <option value="PKR" selected="">PKR</option>
                                            <option value="STAT">STAT</option>
                                            <option value="USD">USD</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoicePeriodFrom">
                                            Invoice Period
                                            From<span style="color:rgb(0, 149, 235);">*</span>
                                        </label>
                                    </td>
                                    <td style="display: inline-flex;width: 100%;">
                                        <input tabindex="4" style="background-color:rgb(251, 255, 193);" type="text" class="form-control frm" id="invoicePeriodFrom" name="invoicePeriodFrom" onchange="datefun(this);" style="background-color:white;" readonly>
                                        <select tabindex="5" id="invoicePeriodFromTime" class="form-control frm" style="width: 100px;">
                                            <option selected="">00:00</option>
                                            <option>01:00</option>
                                            <option>02:00</option>
                                            <option>03:00</option>
                                            <option>04:00</option>
                                            <option>05:00</option>
                                            <option>06:00</option>
                                            <option>07:00</option>
                                            <option>08:00</option>
                                            <option>09:00</option>
                                            <option>10:00</option>
                                            <option>11:00</option>
                                            <option>12:00</option>
                                            <option>13:00</option>
                                            <option>14:00</option>
                                            <option>15:00</option>
                                            <option>16:00</option>
                                            <option>17:00</option>
                                            <option>18:00</option>
                                            <option>19:00</option>
                                            <option>20:00</option>
                                            <option>21:00</option>
                                            <option>22:00</option>
                                            <option>23:00</option>
                                        </select>
                                    </td>
                                    <td>
                                        <label style="margin-left:20px;" for="totalClaim">Total Claim</label>
                                    </td>
                                    <td>
                                        <input tabindex="-1" type="text" class="form-control frm" id="totalClaim" name="totalClaim" readonly>
                                    </td>
                                    <td>
                                        <label for="gstPercent" style="margin-left: 20px; display: none;">
                                            GST Per %
                                        </label>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" onkeydown="return keyvalidation(event, this)" id="gstPercent" style="display: none;" name="gstPercent">
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoicePeriodTo">
                                            Invoice Period
                                            To<span style="color:rgb(0, 149, 235);">*</span>
                                        </label>
                                    </td>
                                    <td style="display: inline-flex;width: 100%;">
                                        <input tabindex="6" style="background-color:rgb(251, 255, 193);" type="text" class="form-control frm" id="invoicePeriodTo" name="invoicePeriodTo" onchange="datefun(this);" style="background-color:white;" readonly>
                                        <select tabindex="7" id="invoicePeriodToTime" class="form-control frm" style="width: 100px;">
                                            <option selected="">00:00</option>
                                            <option>01:00</option>
                                            <option>02:00</option>
                                            <option>03:00</option>
                                            <option>04:00</option>
                                            <option>05:00</option>
                                            <option>06:00</option>
                                            <option>07:00</option>
                                            <option>08:00</option>
                                            <option>09:00</option>
                                            <option>10:00</option>
                                            <option>11:00</option>
                                            <option>12:00</option>
                                            <option>13:00</option>
                                            <option>14:00</option>
                                            <option>15:00</option>
                                            <option>16:00</option>
                                            <option>17:00</option>
                                            <option>18:00</option>
                                            <option>19:00</option>
                                            <option>20:00</option>
                                            <option>21:00</option>
                                            <option>22:00</option>
                                            <option>23:00</option>
                                        </select>
                                    </td>
                                    <td>
                                        <label for="isDifferential" style="margin-left: 20px; display: none;">
                                            Is Differential
                                        </label>
                                    </td>
                                    <td>
                                        <select class="form-control" id="isDifferential" name="isDifferential" style="display: none;">
                                            <option value="">Select</option>
                                            <option value="no">No</option>
                                            <option value="yes">Yes</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr></tr>
                                <tr></tr>
                                <tr>
                                    <td>
                                        <label for="remarks">
                                            Remarks
                                        </label>
                                    </td>
                                    <td>
                                        <textarea tabindex="10" rows="2" cols="10" maxlength="100" style="resize:none" class="form-control frm" id="remarks" name="remarks"></textarea>
                                    </td>
                                </tr>
                            </table>
                            <table class="table" id="tblHeaderV" style="display:none;">
                                <tr style="background-color: white;">
                                    <td>
                                        <label for="diarynumber">Transaction No</label>
                                    </td>
                                    <td>
                                        <span style="width: 171px;" id="diarynumberV" name="diarynumber">
                                        </span>
                                        <input type="hidden" class="form-control" style="width: 171px;" id="tokenkeyV" name="tokenkey">
                                        <input type="hidden" class="form-control" id="diaryHeaderIDV" name="diaryHeaderID">
                                        <input type="hidden" class="form-control" id="invoiceTypeIDV" name="invoiceTypeID">
                                        <input type="hidden" class="form-control" id="headerIDV" name="headerID">
                                    </td>
                                    <td>
                                        <label for="creationdate">Creation Date</label>
                                    </td>
                                    <td>
                                        <span id="creationdateV" name="creationdate">
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="powerProducer">Power Producer</label>
                                    </td>
                                    <td>
                                        <span id="powerProducerV" name="powerProducer">
                                        </span>
                                    </td>
                                    <td>
                                        <label for="submitDate">Submit Date</label>
                                    </td>
                                    <td>
                                        <span id="submitDateV" name="submitDate">
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="producerSite">Producer Site</label>
                                    </td>
                                    <td>
                                        <span id="producerSiteV" name="producerSite">
                                        </span>
                                    </td>
                                    <td><label for="status">Status</label> </td>
                                    <td>
                                        <span id="statusV" name="status" readonly required="">
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoiceType">Invoice Type</label>
                                    </td>
                                    <td>
                                        <span id="invoiceTypeV" name="invoiceType">
                                        </span>
                                    </td>
                                    <td>
                                        <label for="invoiceDueDate">Payment Due Date</label>
                                    </td>
                                    <td><span id="invoiceDueDateV"></span></td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoiceLetterNumber">Invoice No</label>
                                    </td>
                                    <td>
                                        <span id="invoiceLetterNumberV" name="invoiceLetterNumber" maxlength="19">
                                        </span>
                                    </td>
                                    <td>
                                        <label for="remarks">Remarks</label>
                                    </td>
                                    <td style="width:400px;"><span id="remarksV"></span></td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoiceDate">
                                            Invoice Date
                                        </label>
                                    </td>
                                    <td><span id="invoiceDateV"></span></td>
                                    <td>
                                        <label for="parentInvoice">Parent Invoice</label>
                                    </td>
                                    <td><span id="parentInvoiceV"></span></td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoicePeriodFrom">
                                            Invoice Period
                                            From
                                        </label>
                                    </td>
                                    <td>
                                        <span id="invoicePeriodFromV"></span>
                                    </td>
                                    <td>
                                        <label for="currency">Currency</label>
                                    </td>
                                    <td><span id="currencyV"></span></td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="invoicePeriodTo">
                                            Invoice Period
                                            To
                                        </label>
                                    </td>
                                    <td>
                                        <span id="invoicePeriodToV"></span>
                                    </td>
                                    <td>
                                        <label for="totalClaim">Total Claim</label>
                                    </td>
                                    <td>
                                        <span id="totalClaimV" name="totalClaimV">
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td></td>
                                    <td id="VreceiveDateTtitle"></td>
                                    <td id="VreceiveDateValue"></td>
                                </tr>
                                <tr id="hardCopyTR" style="display:none;">
                                    <td></td>
                                    <td></td>
                                    <td>
                                        <label>Invoice Receiving Date</label>
                                    </td>
                                    <td style="display: inline-flex;width: 100%;">
                                        <input style="background-color:rgb(251, 255, 193);width:30%;" type="text" class="form-control" id="hardCopySub" readonly disabled="disabled">
                                        <select id="hardCopySubTime" class="form-control" style="width: 60px;" disabled="disabled">
                                            <option selected="">00:00</option>
                                            <option>01:00</option>
                                            <option>02:00</option>
                                            <option>03:00</option>
                                            <option>04:00</option>
                                            <option>05:00</option>
                                            <option>06:00</option>
                                            <option>07:00</option>
                                            <option>08:00</option>
                                            <option>09:00</option>
                                            <option>10:00</option>
                                            <option>11:00</option>
                                            <option>12:00</option>
                                            <option>13:00</option>
                                            <option>14:00</option>
                                            <option>15:00</option>
                                            <option>16:00</option>
                                            <option>17:00</option>
                                            <option>18:00</option>
                                            <option>19:00</option>
                                            <option>20:00</option>
                                            <option>21:00</option>
                                            <option>22:00</option>
                                            <option>23:00</option>
                                        </select>
                                        <!--tanavush-->
                                        <select id="hardCopyType" class="form-control" style="width: 150px;">
                                            <option selected="">In Person</option>
                                            <option>By Courier</option>
                                            <option>Facsimile</option>
                                            <option>Fax</option>
                                            <option>Email</option>
                                            <option>CDXP</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr></tr>
                            </table>

                        </div>
                        <div id="myModal" title="Attach File" style="display:none;">
                            <div class="form-group">
                                <label class="control-label mb-10" for="attachmentFile">
                                    Select File
                                </label>
                                <label style="padding-left: 270px; color:red;">
                                    File size for Excel and PDF = 5MB, Others = 2MB.
                                </label>
                                <div class="input-group" style="width:100%;">
                                    <input style="padding-bottom: 50px;" class="form-control" id="attachmentFile" name="attachmentFile" accept="application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/pdf, image/*" type="file">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label mb-10" for="attachmentTitle">
                                    Attachment Title *
                                </label>
                                <div class="input-group" style="width:100%;">
                                    <input name="attachmentTitle" style="padding-right: 300px;" class="form-control" id="attachmentTitle" placeholder="Attachment Title" maxlength="50" type="text">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label mb-10" for="attachmentType">
                                    Attachment Type
                                </label>
                                <div class="input-group" style="width:100%;">
                                    <select id="attachmentType" disabled="disabled" style="width:100%;">
                                        <option>File</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label mb-10" for="attachmentDesc">
                                    Description
                                </label>
                                <div class="input-group" style="width:100%;">
                                    <textarea style="resize: none;" maxlength="100" name="attachmentTitle" cols="50" class="form-control" id="attachmentDesc" placeholder="Description Title" rows="4"></textarea>
                                </div>
                            </div>
                            <div style="text-align:right;">
                                <button type="button" tg="0" typ="0" class="btn btn-info" id="btnUpload" name="btnUpload">
                                    Attach File
                                </button>
                                <button type="button" id="btnCloseDialog" class="btn btn-default">
                                    Close
                                </button>
                            </div>
                        </div>
                        <br />
                        <br />
                        <div id="viewonly" style="display:none;">
                            @* <p>
                                    <strong id="bf" style="font-size:18px; color:black;">Blocks and Fuels</strong>
                                </p>
                                <hr style="border-width:1px; margin-bottom:10px;">*@
                            <div class="tab0">
                                &nbsp;<div class="tab1">&nbsp;Blocks and Fuels</div>
                                <div class="tab2">&nbsp;</div>
                            </div>
                            <div id="viewContainer"></div>
                        </div>
                        <div id="edit">
                            @*<p>
                                    <strong id="bf" style="font-size:18px; color:black;">Blocks and Fuels</strong>
                                </p>
                                <hr style="border-width:1px; margin-bottom:10px;">*@
                            <div class="tab0">
                                &nbsp;<div class="tab1">&nbsp;Blocks and Fuels</div>
                                <div class="tab2">&nbsp;</div>
                            </div>
                            <div style="display:flex;">
                                <button type="submit" class="btn btn-success btn-anim" id="addblockrow">
                                    Add Row
                                </button><select id="ddlAddBlock" style="width: 15%;height: 51px;margin-left: 10px;" class="form-control"><option value="0">Select</option></select>
                            </div>
                            <div style="overflow-x: auto;padding-top:20px;">
                                <table class="table table-striped" id="tbl_monthly_epp" dellblock=""></table>
                            </div>
                            @*<p>
                                    <strong style="font-size:18px; color:black;">Components</strong>
                                </p>
                                <hr style="border-width:1px; margin-bottom:10px;">*@
                            <div class="tab0">
                                &nbsp;<div class="tab1">&nbsp;Components</div>
                                <div class="tab2">&nbsp;</div>
                            </div>
                            <div style="overflow-x: auto;">
                                <table class="table table-striped" id="tbl_monthly_cmp_tech">
                                    <caption style="font-size:16px; color:black;">Technical Data</caption>
                                    <thead>
                                        <tr>
                                            <th>Component Name </th>
                                            <th>Units </th>
                                            <th>Claim </th>
                                            <th>Remarks</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                            <br />
                            <br />
                            <div style="overflow-x: auto;">
                                <table class="table table-striped" id="tbl_monthly_cmp_fin">
                                    <caption style="font-size:16px; color:black;">Financial Data</caption>
                                    <thead>
                                        <tr>
                                            <th>Component Name </th>
                                            <th>Units </th>
                                            <th>Claim </th>
                                            <th id="gstFinE" style="display: table-cell;">GST % *</th>
                                            <th>Remarks</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>

                        <br />
                        <br />
                        <table id="techSum" style="display:none;" class="table table-bordered">
                            <caption style="font-size: 13px;font-weight: bold;color:black;">Technical Sum</caption>
                            <thead>
                                <tr>
                                    <th style="width:200px;">Component Name</th>
                                    <th style="width:200px;">Total Claim</th>
                                    <th style="width:200px;">Units</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <!--<ul id="techSum" style="display:none;"></ul>-->
                        <br />
                        <table id="finSum" style="display:none;" class="table table-bordered">
                            <caption style="font-size: 13px;font-weight: bold;color:black;">Financial Sum</caption>
                            <thead>
                                <tr>
                                    <th style="width:200px;">Component Name</th>
                                    <th style="width:200px;">Units</th>
                                    <th style="width:200px;">Total Claim</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <br />
                        <table id="fuelWiseSummary" style="display:none;" class="table table-bordered">
                            <caption style="font-size: 13px;font-weight: bold;color:black;">Fuel Wise Summary</caption>
                            <thead>
                                <tr>
                                    <th style="width:200px;">Fuel Type</th>
                                    <th style="width:200px;">Component Name</th>
                                    <th style="width:200px;">Units</th>
                                    <th style="width:200px;">Total</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                        <!--<ul id="finSum" style="display:none;"></ul>-->
                        <br />

                        <!--Start of Adjustment xx1--><div id="dvAdjustment" style="display:none;">
                            <br />
                            <br />
                            <p><strong style="font-size:18px; color:black;">Adjustments</strong></p>
                            <hr style="margin-bottom: 5px; border-width:1px;">
                            <div id="dvAdjustmentAdd" title="Add Adjustment" style="display:none;">
                                <table style="width:100%;">
                                    <tr>
                                        <td style="text-align: right; padding-right: 10px;"><label>REFERENCE INVOICE</label></td>
                                        <td colspan="3">
                                            <select class="form-control" id="ddlPrefInvoice">
                                                <option value="0" selected="selected">Select</option>
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="text-align: right; padding-right: 10px;"><label>ADJUSTMENT TYPE</label></td>
                                        <td><input type="text" class="form-control adj"></td>
                                        <td style="text-align: right; padding-right: 10px;"><label>AMOUNT</label></td>
                                        <td><input type="text" id="txtAdjAmount" class="form-control adj"></td>
                                    </tr>
                                    <tr style="display:none;">
                                        <td style="text-align: right; padding-right: 10px;"><label>ATTRIBUTE 1</label></td>
                                        <td><input type="text" class="form-control adj"></td>
                                        <td style="text-align: right; padding-right: 10px;"><label>ATTRIBUTE 2</label></td>
                                        <td><input type="text" class="form-control adj"></td>
                                    </tr>
                                    <tr style="display:none;">
                                        <td style="text-align: right; padding-right: 10px;"><label>ATTRIBUTE 3</label></td>
                                        <td><input type="text" class="form-control adj"></td>
                                        <td style="text-align: right; padding-right: 10px;"><label>ATTRIBUTE 4</label></td>
                                        <td><input type="text" class="form-control adj"></td>
                                    </tr>
                                    <tr>
                                        <td style="text-align: right; padding-right: 10px;"><label>REMARKS</label></td>
                                        <td colspan="3"><textarea class="form-control adj" rows="2" cols="20"></textarea></td>
                                    </tr>
                                    <tr>

                                        <td colspan="4" style="padding: 10px;text-align:right;">
                                            <button type="button" tg="0" typ="0" class="btn btn-info" id="btnSaveAdj" name="btnUpload">
                                                Save Adjustment
                                            </button><button type="button" id="btnCloseDialogAdj" class="btn btn-default" style="margin-left: 10px;">
                                                Close
                                            </button>
                                        </td>
                                    </tr>

                                </table>
                            </div>
                            <div>
                                <button tabindex="12" type="button" id="btnAddAdjustment" class="btn btn-info">
                                    Add Adjustment
                                </button>
                                <table class="table table-bordered" id="tblADJ" adjdellist="">
                                    <thead>
                                        <tr>
                                            <th style="width:300px;">REFERENCE INVOICE <span style="color:rgb(0, 149, 235);">*</span></th>
                                            <th style="width:150px;">ADJUSTMENT TYPE <span style="color:rgb(0, 149, 235);">*</span></th>
                                            <th style="width:150px;">AMOUNT <span style="color:rgb(0, 149, 235);">*</span></th>
                                            <th>REMARKS</th>
                                            <th class="clsAJDEdit" style="width:36px;"></th>
                                            <th class="clsAJDDelete" style="width:36px;"></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div><!--END OF dvAdjustment xx1-->
                        @*<strong style="font-size:18px; color:black;">Attachment</strong> <hr style="border-width:1px; margin-bottom:10px;">*@
                        <div class="tab0">
                            &nbsp;<div class="tab1">&nbsp;Attachment</div>
                            <div class="tab2">&nbsp;</div>
                        </div>
                        <div>
                            <button type="button" id="btnAddFiles" class="btn btn-info">
                                Add Attachments
                            </button>

                            <button type="button" id="DownAll" class="btn btn-info">
                                Download All
                            </button>


                            <div>
                                <table class="table table-bordered" dellist="" data-tablesaw-mode="swipe" id="tbl_attach">
                                    <thead>
                                        <tr>
                                            <th scope="col" data-tablesaw-sortable-col="" data-tablesaw-priority="persist">
                                                Title
                                            </th>
                                            <th scope="col" data-tablesaw-sortable-col="" data-tablesaw-priority="persist">
                                                Description
                                            </th>
                                            <th scope="col" data-tablesaw-sortable-col="" data-tablesaw-priority="persist">
                                                Details
                                            </th>
                                            <th class="clstdEdit" style="width:36px;" scope="col" data-tablesaw-sortable-col="" data-tablesaw-sortable-default-col="" data-tablesaw-priority="3"></th>
                                            <!--id="btnFileDel"-->
                                            <th class="clstdDelete" style="width:36px;" scope="col" data-tablesaw-sortable-col="" data-tablesaw-sortable-default-col="" data-tablesaw-priority="3"></th>
                                            <th class="clstdDownload" scope="col" style="width:36px;text-align:center;" data-tablesaw-sortable-col="" data-tablesaw-sortable-default-col="" data-tablesaw-priority="3">
                                                @*<span customtooltip="Download All" id="DownAll" class="glyphicon glyphicon-download-alt" aria-hidden="true" style="cursor: pointer;color:#0095eb;display:none;"></span>*@
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                        </div>
                        <!--<ul id="ulFileList" dellist=""></ul>-->

                        <br>
                        <div>
                            @*<p><strong style="font-size:18px; color:black;">Notes</strong></p>
                                <hr style="margin-bottom: 5px; border-width:1px;">*@
                            <div class="tab0">
                                &nbsp;<div class="tab1">&nbsp;Notes</div>
                                <div class="tab2">&nbsp;</div>
                            </div>
                            <div style="display: inline-flex; width: 100%; max-height: 170px; min-height: 170px;">
                                <div id="rmxDisplay" style="min-width: 58%;width: inherit;overflow-y: scroll; overflow-x: hidden;display:none;"></div>
                                <div class="clsRemarkss" style="min-width: 100%;text-align: right;">
                                    <textarea cols="70" rows="6" maxlength="2000" id="prevTxtAreaRemarks" style="width: 99%; height: 99%;"></textarea>
                                </div>
                            </div>
                        </div>
                        <br>
                        <br>

                        <div class="clsDispDiv">
                            <div class="tab0">
                                &nbsp;<div class="tab1">&nbsp;Dispute Attachment</div>
                                <div class="tab2">&nbsp;</div>
                            </div>

                            <table class="table table-bordered" dellist="" data-tablesaw-mode="swipe" id="tbl_dispute_attach">
                                <thead>
                                    <tr>
                                        <th scope="col" data-tablesaw-sortable-col="" data-tablesaw-priority="persist">
                                            Title
                                        </th>
                                        <th scope="col" data-tablesaw-sortable-col="" data-tablesaw-priority="persist">
                                            Details
                                        </th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                        <div class="clsDispDiv">
                            @*<p><strong style="font-size:18px; color:black;">Notes</strong></p>
                                <hr style="margin-bottom: 5px; border-width:1px;">*@
                            <div class="tab0">
                                &nbsp;<div class="tab1">&nbsp;Dispute Notes</div>
                                <div class="tab2">&nbsp;</div>
                            </div>
                            <div style="display: inline-flex; width: 100%; max-height: 170px; min-height: 170px;">
                                @*<div id="rmxDisplayNew" style="min-width: 58%;width: inherit;overflow-y: scroll; overflow-x: hidden;display:none;"></div>*@
                                <div class="clsDisputeNotes" style="min-width: 100%;text-align: right;" id="">
                                    <textarea cols="70" rows="6" maxlength="2000" id="disputeNotes" style="width: 99%; height: 99%;" readonly></textarea>
                                </div>
                            </div>
                        </div>
                        <br />

                        <div id="rmxDisplayNew" style="min-width: 58%;width: inherit;overflow-y: scroll; overflow-x: hidden;display:none;"></div>
                        <br />
                        <div class="container" style="width: 100%; margin-bottom: 20px;">
                            <div class="row">
                                <!--<div class="col-md-3">-->
                                <div style="display:inline-flex;">
                                    <button style="width: 100%;" class="btn btn-danger" id="btnClear">
                                        Clear All
                                    </button>
                                </div>
                                <div style="display:inline-flex;float:right;">
                                    <div>
                                        <button type="button" style="width: 100%;" class="btn btn-info btnAction" id="btnSave" tg="0" value="Draft">
                                            Save
                                        </button>
                                    </div>
                                    <div style="padding-left:10px;">
                                        <button type="button" style="width: 100%; " class="btn btn-success btn-anim btnAction" id="btnSubmit" value="Submitted">submit</button>
                                    </div>

                                    <div style="display:none;padding-left:10px;">
                                        <button style="width: 100%;" type="button" class="btn btn-default" id="btnWithDraw">
                                            Withdraw
                                        </button>
                                    </div>
                                    <div style="padding-left:10px;">
                                        <button style="width: 100%;" type="submit" class="btn btn-default" id="btnCancel">
                                            Cancel
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--end container-->
                    </div>
                    @*====Body End=====*@
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var tempDHI;
        var Vname, VsiteID;
            (function () {
                $('#tooltip').remove();
                var _swal = window.swal;

                window.swal = function () {

                    var previousWindowKeyDown = window.onkeydown;

                    _swal.apply(this, Array.prototype.slice.call(arguments, 0));

                    window.onkeydown = previousWindowKeyDown;

                };

            })();
            ///////////////VALIDATION JS START////////

            var deci = true;
            function compdate(e) {

                if ($(e).attr('ratevalid') == "to") {
                    if ($($(e).parent().prev().children()[0]).val() == "") {
                        swal({
                            title: "Error",
                            text: "Please select rate valid from date first!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                            //,
                            //onAfterClose: () => {
                            //    $(e).val('');
                            //    setTimeout(() => $($(e).parent().prev().children()[0]).focus(), 100)
                            //}
                        }, function () {
                            $(e).val('');
                            setTimeout(() => $($(e).parent().prev().children()[0]).focus(), 100);
                        });
                    }
                }
                else if ($(e).attr('ratevalid') == "from") {
                    $($(e).parent().next().children()[0]).datepicker('option', 'minDate', $(e).val());
                }

            }






            function fullvalidation(evt, e) {
                e.value = e.value.replace(/,/g, '');

                if (e.value % 1 == 0) {
                    if (e.value.toString().indexOf(".") < 0) {
                        e.value = e.value.replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                        e.value += ".0000";
                    } else {
                        e.value = e.value.replace('.0000', '');
                        e.value = e.value.replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                        e.value += ".0000";

                    }
                } else {
                    var index = e.value.toString().indexOf(".");
                    var p1 = e.value.toString().substring(0, index);
                    p1 = p1.replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                    var p2 = e.value.toString().substring(index);
                    p2 = p2 + "0000";
                    p2 = p2.substring(0, 5);
                    e.value = p1 + p2;
                }



            }
            var cflag = 0;

            function keyvalidation(evt, e) {




                var charCode = (evt.which) ? evt.which : event.keyCode;



                if (charCode == 17) {

                    cflag += 1;

                    return true;
                }

                if (cflag == 1 && charCode == 86) {

                    cflag = 0;
                    return true;
                }



                if (charCode != 9 && charCode != 8 && charCode != 37 && charCode != 38 && charCode != 39 && charCode != 40) {

                    if (e.id == "gstPercent" || e.id.includes("gstIT") || e.id.includes("gstPercentIT")) {

                        if (e.value.toString().length > 1) {
                            if (e.value == "10" && String.fromCharCode(evt.keyCode) == "0") {
                                evt.preventDefault();
                                e.value = "100";
                            } else {
                                evt.preventDefault();
                            }

                        }
                        else if (e.value < 0) {
                            evt.preventDefault();
                        }
                    }
                }




                if ((e.value % 1 != 0 && charCode == 190) || (e.value.toString().charAt(e.value.toString().length - 1) == '.' && charCode == 190)) {
                    return false;
                }


                if (charCode != 190 && charCode != 40 && charCode != 39 && charCode != 38 && charCode != 37 && charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57) && (charCode < 96 || charCode > 105))
                    return false;

                return true;

            }


        function validationforWHT(value) {
            // Validation for WHT invoice type that only one month should be allowed for user to select 

            var fromdate = document.getElementById("invoicePeriodFrom").value;
            var toDate = document.getElementById('invoicePeriodTo').value;

            var d1 = new Date(fromdate);
            var d2 = new Date(toDate);
            var d3 = new Date()

            var notLastDay = new Date(d2.getFullYear(), d2.getMonth() + 1, 0).getDate() !== d2.getDate();

            if ($('#invoiceType option:selected').text().toUpperCase() == "WHT ON DIVIDEND" &&
                (fromdate !== '' && toDate !== '' && (d1.getMonth() !== d2.getMonth() || d1.getDate() !== 1 || notLastDay))
            ) {
                swal({
                    title: "Error",
                    text: "For 'WHT on Dividend' invoice type, the date duration must be a complete single month.",
                    type: "warning"
                }, function () { setTimeout(() => $('#invoicePeriodFrom').focus(), 100); });
                // Reset the dates
                //document.getElementById("invoicePeriodFrom").value = "";
                //document.getElementById('invoicePeriodTo').value = "";
                return false;
            }
            else {
                return true;
            }
        }



            function datefun(e) {

                var fromdate = document.getElementById("invoicePeriodFrom").value;

                var toDate = document.getElementById('invoicePeriodTo').value;

                if (e.id == "invoiceDueDate") {

                    if (fromdate == "") {
                        swal({
                            title: "Error",
                            text: "Please select 'Invoice Period From' date first!",
                            type: "warning"
                            //,onAfterClose: () => {
                            //    setTimeout(() => $('#invoicePeriodFrom').focus(), 100);
                            //}
                        }, function () { setTimeout(() => $('#invoicePeriodFrom').focus(), 100); });
                        e.value = '';
                        $(e).datepicker("option", { setDate: null, minDate: null, maxDate: null });
                    }


                }
                else if (e.id == "invoicePeriodFrom") {

                    var d1 = Date.parse($('#invoicePeriodFrom').val());
                    var d2 = Date.parse($('#invoicePeriodTo').val());
                    var d3 = Date.parse($('#invoiceDueDate').val());
                    if (d1 > d3) {
                        $('#invoiceDueDate').datepicker("option", { setDate: null, minDate: null, maxDate: null });
                        $('#invoiceDueDate').val('');
                    }
                    if (d1 > d2) {
                        $('#invoicePeriodTo').datepicker("option", { setDate: null, minDate: null, maxDate: null });

                        $('#invoicePeriodTo').val('');

                    }
                    else {
                        $('#invoicePeriodTo').datepicker("option", { setDate: null, minDate: null, maxDate: null });
                    }

                }
                else if (e.id == "invoicePeriodTo") {
                    if (fromdate == "") {
                        swal({
                            title: "Error",
                            text: "Please select 'Invoice Period From' date first!",
                            type: "warning"
                            //,onAfterClose: () => {
                            //    setTimeout(() => $('#invoicePeriodFrom').focus(), 100)
                            //}
                        }, function () { setTimeout(() => $('#invoicePeriodFrom').focus(), 100); });
                        e.value = "";
                        $(e).datepicker("option", { setDate: null, minDate: null, maxDate: null });
                    }

                }
                $('#invoicePeriodTo').datepicker('option', 'minDate', $('#invoicePeriodFrom').val());
                $('#invoiceDueDate').datepicker('option', 'minDate', $('#invoicePeriodFrom').val());
            }




            function clearline() {

                document.getElementById("selectedBlock0").checked = false;
                document.getElementById("blockType0").selectedIndex = 0;
                document.getElementById("fuelType0").selectedIndex = 0;
                document.getElementById("rateValidFrom0").value = "";
                document.getElementById("rateValidTo0").value = "";
                document.getElementById("rateValidTo0").value = "";
                document.getElementById("claimedAmount0").value = "";
                document.getElementById("blockRemarks0").value = "";


            }

            function addcomma(evt, e) {

                if (evt.which >= 37 && evt.which <= 40) return;

                e.value = e.value.replace(/\D/g, '')
                    .replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                e.value += ".00";


            }

            function duedate() {

                document.getElementById("invoiceDueDate").style.display = "block";
                document.getElementById("ndt").style.display = "none";
            }

            function duedate1(e) {

                d = new Date(document.getElementById(e.id).value);
                dt = d.getDate();
                mn = d.getMonth();
                var month = new Array();
                month[0] = "Jan";
                month[1] = "Feb";
                month[2] = "Mar";
                month[3] = "Apr";
                month[4] = "May";
                month[5] = "Jun";
                month[6] = "Jul";
                month[7] = "Aug";
                month[8] = "Sep";
                month[9] = "Oct";
                month[10] = "Nov";
                month[11] = "Dec";

                var n = month[mn];
                yy = d.getFullYear();
                document.getElementById("ndt").value = dt + "-" + n + "-" + yy;
                document.getElementById("ndt").style.display = "block";

                document.getElementById(e.id).style.display = "none";


            }





            function fromdate() {


                document.getElementById("invoicePeriodFrom").value = "";
                document.getElementById("invoicePeriodFrom").style.display = "block";


                document.getElementById("ndt1").style.display = "none";
            }

            function fromdate1(e) {

                d = new Date(document.getElementById(e.id).value);
                dt = d.getDate();
                mn = d.getMonth();
                var month = new Array();
                month[0] = "Jan";
                month[1] = "Feb";
                month[2] = "Mar";
                month[3] = "Apr";
                month[4] = "May";
                month[5] = "Jun";
                month[6] = "Jul";
                month[7] = "Aug";
                month[8] = "Sep";
                month[9] = "Oct";
                month[10] = "Nov";
                month[11] = "Dec";

                var n = month[mn];
                yy = d.getFullYear();
                document.getElementById("ndt1").value = dt + "-" + n + "-" + yy;
                document.getElementById("ndt1").style.display = "block";

                document.getElementById(e.id).style.display = "none";


            }











            function letterdate() {


                document.getElementById("invoiceDate").value = "";
                document.getElementById("invoiceDate").style.display = "block";


                document.getElementById("ndt2").style.display = "none";
            }

            function letterdate1(e) {

                d = new Date(document.getElementById(e.id).value);
                dt = d.getDate();
                mn = d.getMonth();
                var month = new Array();
                month[0] = "Jan";
                month[1] = "Feb";
                month[2] = "Mar";
                month[3] = "Apr";
                month[4] = "May";
                month[5] = "Jun";
                month[6] = "Jul";
                month[7] = "Aug";
                month[8] = "Sep";
                month[9] = "Oct";
                month[10] = "Nov";
                month[11] = "Dec";

                var n = month[mn];
                yy = d.getFullYear();
                document.getElementById("ndt2").value = dt + "-" + n + "-" + yy;
                document.getElementById("ndt2").style.display = "block";

                document.getElementById(e.id).style.display = "none";


            }









            function todate() {


                document.getElementById("invoicePeriodTo").value = "";
                document.getElementById("invoicePeriodTo").style.display = "block";


                document.getElementById("ndt3").style.display = "none";
            }

            function todate1(e) {

                d = new Date(document.getElementById(e.id).value);
                dt = d.getDate();
                mn = d.getMonth();
                var month = new Array();
                month[0] = "Jan";
                month[1] = "Feb";
                month[2] = "Mar";
                month[3] = "Apr";
                month[4] = "May";
                month[5] = "Jun";
                month[6] = "Jul";
                month[7] = "Aug";
                month[8] = "Sep";
                month[9] = "Oct";
                month[10] = "Nov";
                month[11] = "Dec";

                var n = month[mn];
                yy = d.getFullYear();
                document.getElementById("ndt3").value = dt + "-" + n + "-" + yy
                document.getElementById("ndt3").style.display = "block";

                document.getElementById(e.id).style.display = "none";


            }

            function checkEmpty(value) {
                var confirm = true, thisErrorText, thisDate, gstCtrl;
                if ($('#invoiceType').val() == 0) {
                    swal({
                        title: "Error",
                        text: "Please select invoice type!",
                        type: "warning",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //,onAfterClose: () => {
                        //    setTimeout(() => $('#invoiceType').focus(), 100)
                        //}
                    }, function () { setTimeout(() => $('#invoiceType').focus(), 100); });
                    return false;
                }
                if ($('#invoiceLetterNumber').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please enter invoice number!",
                        type: "warning",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //,onAfterClose: () => {
                        //              setTimeout(() => $('#invoiceLetterNumber').focus(), 100);
                        //          }
                    }, function () {
                        setTimeout(() => $('#invoiceLetterNumber').focus(), 100);
                    });
                    return false;
                }
                if ($('#invoiceDate').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please select invoice date!",
                        type: "warning",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //,onAfterClose: () => {
                        //              setTimeout(() => $('#invoiceDate').focus(), 100);
                        //          }
                    }, function () {
                        setTimeout(() => $('#invoiceDate').focus(), 100);
                    });
                    return false;
                }
                if ($('#invoicePeriodFrom').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please select invoice period from date!",
                        type: "error",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //,onAfterClose: () => {
                        //    setTimeout(() => $('#invoicePeriodFrom').focus(), 100);
                        //}
                    }, function () {
                        setTimeout(() => $('#invoicePeriodFrom').focus(), 100);
                    });
                    return false;
                }
                if ($('#invoicePeriodTo').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please select invoice period to date!",
                        type: "warning",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //          ,
                        //onAfterClose: () => {
                        //              setTimeout(() => $('#invoicePeriodTo').focus(), 100);
                        //          }
                    }, function () {
                        setTimeout(() => $('#invoicePeriodTo').focus(), 100);
                    });
                    return false;
                }
                if ($('#invoiceDueDate').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please select payment due date!",
                        type: "warning",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //          ,
                        //onAfterClose: () => {
                        //				setTimeout(() => $('#invoiceDueDate').focus(), 100);
                        //			}
                    }, function () {
                        setTimeout(() => $('#invoiceDueDate').focus(), 100);
                    });
                    return false;
                }
                if ($("#invoiceType option:selected").text() == "General Sales Tax") {
                    if ($('#parentInvoice').val() == 0 || $('#parentInvoice').val() == -1) {
                        swal({
                            title: "Error",
                            text: "Please select parent invoice number!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                            //             ,
                            //onAfterClose: () => {
                            //				setTimeout(() => {$('#parentInvoice').focus();$('#gstDropDown').focus();}, 100)
                            //			}
                        }, function () {
                            setTimeout(() => {
                                $('#parentInvoice').focus();
                                $('#gstDropDown').focus();
                            },
                                100);
                        });
                        return false;
                    }
                }

                if ($("#invoiceType option:selected").text() == "GST on Commodity Charge") {
                    if ($('#parentInvoice').val() == 0 || $('#parentInvoice').val() == -1) {
                        swal({
                            title: "Error",
                            text: "Please select parent invoice number!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                            //             ,
                            //onAfterClose: () => {
                            //				setTimeout(() => {$('#parentInvoice').focus();$('#gstDropDown').focus();}, 100)
                            //			}
                        }, function () {
                            setTimeout(() => {
                                $('#parentInvoice').focus();
                                $('#gstDropDown').focus();
                            },
                                100);
                        });
                        return false;
                    }
                }
                if ($('#tbl_monthly_epp > tbody > tr[bisrequired="1"]').length == 0) {
                    swal({
                        title: "Error",
                        text: "Please select atleast one row in 'Blocks and Fuels'!",
                        type: "warning"
                    });
                    return false;
                }
                $.each($('.dtfrom'), function (x, y) {
                    if ($(y).parent().parent().attr('bisrequired') != '0') {
                        if (y.value == '') {
                            confirm = false;
                            thisDate = y;
                            thisErrorText = "Please select all rate valid from dates in 'Blocks and Fuels'!";

                            return false;
                        }
                        else {
                            if ($($(y).parent().next().children()[0]).val() == '') {
                                confirm = false;
                                thisDate = $(y).parent().next().children()[0];
                                thisErrorText = "Please select all rate valid to dates in 'Blocks and Fuels'!";
                                return false;
                            }
                        }
                    }

                });

                if (confirm) {
                    if ($('#invoiceType>option:selected').text() != "Capacity Purchase Price" && $('#invoiceType>option:selected').text() != "Bonus") {
                        $('.txtGSTFin').each(function (x, y) {
                            if ($.trim($(this).val()) == "") {
                                thisDate = this;
                                thisErrorText = "Please enter valid GST Percentage...!";
                                confirm = false;
                                return false;
                            }
                        });
                    }
                }
                if (!confirm) {
                    swal({
                        title: "Error",
                        text: thisErrorText,
                        type: "warning",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //,onAfterClose: () => {
                        //    setTimeout(() => $(thisDate).focus(), 100)
                        //}
                    }, function () { setTimeout(() => $(thisDate).focus(), 100); });
                }

                if (value == "Submitted" && $('#tbl_attach > tbody > tr').length == 0) {
                    swal({
                        title: "Error",
                        text: "Please select atleast one attachment!",
                        type: "warning"
                    });
                    return false;
                }
                return confirm;
            }

            /////////////////VALIDATION JS END/////////
            //var Token = "95faed79-59ff-4a84-8490-c8d1f557584f";
            //var headerObj = JSON.parse(sessionStorage.getItem("invHeader"));
            var sitesLength = 0;
            var blocksData;
            var isAdvance = "";
            var r = 0;
            var tab = 11;
            //var tempDHI;
        var currentUserType, blkClaim = 0.0000, ComClaim = 0.0000;

        function EcmFileTransfer(diary_id, Vname, VsiteID, abc) {
            debugger;
            var bodyContent = "{\r\n \"diary_header_id\":\"{0}\",\r\n \"Vname\": \"{1}\",\r\n \"VsiteID\": \"{2}\",\r\n \"abc\": \"{3}\"\r\n}";
            bodyContent = bodyContent.FormatRow(diary_id, Vname, VsiteID, abc);

            $.ajax({
                url: "https://prod-68.westeurope.logic.azure.com:443/workflows/53fda254917743979c382f734295c4b3/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=wrWv2TlmEY4sgwkTLAOyBl1pMwBoKkeMF6BIxRd3duY",
                crossDomain: true,
                method: "POST",
                data: bodyContent,
                processData: false,
                headers: {
                    "content-type": "application/json",
                    "cache-control": "no-cache"
                },
                success: function (data) {
                    console.log(data);
                },
                error: function (err) {
                    debugger;
                    var fromdata = new FormData();
                    VsiteID = VsiteID.toString();
                    fromdata.append("diary_id", diary_id);
                    fromdata.append("Vname", Vname);
                    fromdata.append("VsiteID", VsiteID);
                    $.ajax({
                        url: "/Invoice/CreateECMMail" + $(location).attr("search"),
                        method: "POST",
                        data: fromdata,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            console.log(data);
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });

                    console.log(err);
                }
            });
        }

            $(document).ready(function () {


                $("#status").val('Draft');
                //Token = sessionStorage.getItem('apiToken');
                //var data = JSON.parse(sessionStorage.getItem('invHeader'));

                var data = @Html.Raw(@ViewBag.invHeader);
            data.header_id_pk = $.parseJSON(data.header_id_pk);
            data.UserDTL = $.parseJSON(data.UserDTL)[0];



            currentUserType = data.UserDTL.UserTypeID;


            $('body').on('focus', ".dtDate", function () {
                $(this).datepicker({
                    changeMonth: true,
                    changeYear: true,
                    dateFormat: 'dd-M-yy'
                });
            });

            $('body').on('focus', ".dtToDate", function () {

                $(this).datepicker({
                    changeMonth: true,
                    changeYear: true,
                    dateFormat: 'dd-M-yy',
                    minDate: $($(this).parent().prev().children()[0]).val()//, || $('#invoicePeriodFrom').val(),
                    //maxDate: $('#invoicePeriodTo').val()
                });

            });

            $('body').on('focus', ".dtfrom", function () {

                $(this).datepicker({
                    changeMonth: true,
                    changeYear: true,
                    dateFormat: 'dd-M-yy'
                    //minDate: $('#invoicePeriodFrom').val(),
                    //maxDate: $('#invoicePeriodTo').val()
                });
            });

            $('#invoiceDueDate, #invoiceDate, #invoicePeriodFrom,#invoicePeriodTo, #hardCopySub').datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd-M-yy'
            });
            sitesLength = data.header_id_pk.length;
            var producerSite = '';
            for (var i = 0; i < sitesLength; i++) {

                vendorID = data.header_id_pk[i].VENDOR_ID;
                $('#vendorID').val(vendorID);
                vendorName = data.header_id_pk[i].VENDOR_NAME;
                verndorSiteID = data.header_id_pk[i].VENDOR_SITE_ID;
                //if (data.header_id_pk[i].ADDRESS_LINE1 != producerSite) {
                producerSite = data.header_id_pk[i].ADDRESS_LINE1;
                if (i == 0 && data.header_id_pk.length == 1) {
                    $("#producerSite").append('<option hid="' + data.header_id_pk[i].HEADER_ID_PK + '" selected="selected" value="' + data.header_id_pk[i].VENDOR_SITE_ID + '">' + producerSite + '</option>');

                    //$("#producerSite").append('<option selected="selected" value="' + data.header_id_pk[i].VENDOR_SITE_ID + '">' + producerSite + '</option>');
                    $("#producerSite").attr('disabled', true);
                    invData = $.parseJSON(data.header_id_pk[0].InvoiceTypesJSONstring);
                    invData.sort(function (a, b) {
                        var textA = a.INVOICE_TYPES.toUpperCase();
                        var textB = b.INVOICE_TYPES.toUpperCase();
                        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;
                    });
                    $.each(invData, function (i, clue) {
                        $("#invoiceType").append('<option adjustments="' + clue.ppaAI[0].ADJUSTMENTS + '" tg="' + clue.ppaAI[0].IS_HOURLY + '" value="' + clue.APP_INVOICES_ID_PK + '">' + clue.INVOICE_TYPES + '</option>');
                    });
                }
                else {
                    $("#producerSite").attr('disabled', false);
                    $("#producerSite").append('<option hid="' + data.header_id_pk[i].HEADER_ID_PK + '" value="' + data.header_id_pk[i].VENDOR_SITE_ID + '">' + producerSite + '</option>');
                    //$("#producerSite").append('<option value="' + data.header_id_pk[i].VENDOR_SITE_ID + '">' + producerSite + '</option>');
                }
                //}
                headerID = data.header_id_pk[i].HEADER_ID_PK;
                $("#headerID").val(headerID);
                $("#powerProducer").val(vendorName);

            }//end of for loop

            function LoadParentInvoice(id, vSID) {
                var fromdata = new FormData();
                fromdata.append("vls", '1½' + vendorID + '½' + vSID + '½' + $('#invoiceType').val());
                $.ajax
                    ({
                        //type: "GET",
                        type: "POST",
                        //url: "https://cppa2.azurewebsites.net/v1/Invoice/inv_list?vid=" + vendorID + "&vsid=" + vSID,
                        url: "/Invoice/AjaxCall" + $(location).attr("search"),
                        //dataType: 'json',
                        //headers: {
                        //    "Token": Token
                        //},
                        beforeSend: function () {
                            $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                        },
                        complete: function () {
                            $.unblockUI();
                        },
                        data: fromdata,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            data = $.parseJSON(data);
                            debugger;
                            $("#parentInvoice").html('<option value="0">Select</option>');
                            $.each(data, function (i, category) {

                                $("#parentInvoice").append('<option value="' + category.HEADER_ID_PK + '">' + category.DOCUMENT_NO + '</option>');

                                //$("#adjRefInvoiceNum" + $("#rowAdj").val()).append('<option value="' + category.HEADER_ID_PK + '">' + category.DOCUMENT_NO + '</option>');

                            });
                            $("#parentInvoice").removeAttr('disabled');
                            //if ($('#parentInvoice').hasClass('selectized')) {
                            //    $('#parentInvoice')[0].selectize.destroy();
                            //}


                            $.unblockUI();
                            if (id != -100) {
                                $("#parentInvoice").val(id);
                                $("#parentInvoiceV").html($("#parentInvoice option:selected").text());
                            }
                            //$("#parentInvoice").selectize();
                        },
                        error: function (request, textStatus, errorThrown) {
                            // alert(request.getResponseHeader('some_header'));
                            $.unblockUI();
                        }
                    });
            }//END OF LOAD PARENT INVOICE METHOD


                function LoadParentInvoiceGSTComodity(id, venSID) {
                    var fromdata = new FormData();
                    fromdata.append("vls", '19½' + vendorID + '½' + venSID + '½' + $('#invoiceType').val());
                    $.ajax
                        ({
                            //type: "GET",
                            type: "POST",

                            url: "/Invoice/AjaxCall" + $(location).attr("search"),

                            beforeSend: function () {
                                $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                            },
                            complete: function () {
                                $.unblockUI();
                            },
                            data: fromdata,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                data = $.parseJSON(data);
                                debugger;
                                $("#parentInvoice").html('<option value="0">Select</option>');
                                $.each(data, function (i, category) {
                                    debugger;
                                    $("#parentInvoice").append('<option value="' + category.HEADER_ID_PK + '">' + category.DOCUMENT_NO + '</option>');

                                });
                                debugger;
                                $("#parentInvoice").removeAttr('disabled');
                                $.unblockUI();
                                if (id != -100) {
                                    $("#parentInvoice").val(id);
                                    $("#parentInvoiceV").html($("#parentInvoice option:selected").text());
                                }
                                //$("#parentInvoice").selectize();
                            },
                            error: function (request, textStatus, errorThrown) {
                                // alert(request.getResponseHeader('some_header'));
                                $.unblockUI();
                            }
                        });
                }//END OF LOAD PARENT INVOICE for comodity METHOD

            $('#producerSite').on('change', function () {


                var v = $(this).val();
                $("#invoiceType").html('<option value="0">Select</option>');
                $.each(data.header_id_pk, function (x, y) {
                    if (y.VENDOR_SITE_ID == v) {
                        headerID = y.HEADER_ID_PK;
                        invData = $.parseJSON(y.InvoiceTypesJSONstring);
                        $.each(invData, function (i, clue) {
                            $("#invoiceType").append('<option adjustments="' + clue.ppaAI[0].ADJUSTMENTS + '"  tg="' + clue.ppaAI[0].IS_HOURLY + '" value="' + clue.APP_INVOICES_ID_PK + '">' + clue.INVOICE_TYPES + '</option>');
                        });
                    }
                });
            });
            headerID = $("option:selected", this).attr("hid");


            $('body').off('change', '#invoiceType');
            //$(".getBloks").change(function () {
            $('body').on('change', '#invoiceType', function (e) {
                e.preventDefault();

                if ($("#invoiceType").val() == '0' || $("#producerSite").val() == '0') {
                    $('#tbl_monthly_epp').html('');
                    $('#tbl_monthly_cmp_tech > tbody').html('');
                    $('#tbl_monthly_cmp_fin > tbody').html('');

                    return false;
                }

                if ($("#invoiceType").find(':selected').attr('tg') == "Y") {
                    $('#invoicePeriodFromTime, #invoicePeriodToTime').removeAttr('disabled');
                    $('#invoicePeriodFromTime').attr('tabindex', '5');
                    $('#invoicePeriodToTime').attr('tabindex', '7');
                }
                else {
                    $('#invoicePeriodFromTime, #invoicePeriodToTime').attr('disabled', 'disabled');
                    $('#invoicePeriodFromTime, #invoicePeriodToTime').val('00:00');
                    $('#invoicePeriodFromTime, #invoicePeriodToTime').attr('tabindex', '-1');
                }
                if ($("#invoiceType").find(':selected').attr('adjustments') == "Y") {
                    $('#dvAdjustment').show();
                } else {
                    $('#dvAdjustment').hide();
                }
                var selectedValue = $("#invoiceType").val();
                selectedInvType = $("#invoiceType option:selected").text();
                if (selectedInvType == "General Sales Tax" || selectedInvType == "Pre COD GST Payment") {
                    LoadParentInvoice(-100, $('#producerSite').val());
                    $('#parentstar').show();
                    $('#parentInvoice').attr('tabindex', '9');
                }

                else if (selectedInvType == "GST on Commodity Charge") {
                    debugger;
                    LoadParentInvoiceGSTComodity(-100, $('#producerSite').val());
                    $('#parentstar').show();
                    $('#parentInvoice').attr('tabindex', '9');
                }
                else {
                    //if ($('#parentInvoice').hasClass('selectized')) {
                    //    $('#parentInvoice')[0].selectize.destroy();
                    //}
                    $('#parentInvoice').html('<option value="0">None</option>');
                    $('#parentInvoice').attr('disabled', 'disabled');
                    $('#parentstar').hide();
                    $('#parentInvoice').attr('tabindex', '-1');
                }

                //99999999

                var fromdata = new FormData();
                fromdata.append("vls", '0½' + headerID + '½' + $('#producerSite').val() + '½' + $('#invoiceType').val());
                $.ajax
                    ({
                        //type: "GET",
                        type: "POST",
                        //url: "https://cppa2.azurewebsites.net/v1/PPABlkFuel/ByPPAandInvTypes4Create?ppaHeaderid=" + headerID + "&VENDOR_SITE_ID_FK=" + $('#producerSite').val() + "&ppaInvTypeID=" + $('#invoiceType').val(),
                        url: "/Invoice/AjaxCall" + $(location).attr("search"),
                        //dataType: 'json',
                        //headers: {
                        //    "Token": Token
                        //},
                        data: fromdata,
                        contentType: false,
                        processData: false,
                        beforeSend: function () {
                            $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                        },
                        complete: function () {
                            $.unblockUI();
                        },
                        success: function (data) {
                            debugger;
                            data = $.parseJSON(data);
                            //if ($('#ddlPrefInvoice').hasClass('selectized')) {
                            //    $('#ddlPrefInvoice')[0].selectize.destroy();
                            //}
                            $("#ddlPrefInvoice").html(data.adjInv);
                            //$("#ddlPrefInvoice").selectize();
                            r = 0;
                            if (data.blockData == "[]") {
                                $('#ddlAddBlock').html('</option><option value="0">Select</option>');
                                swal({
                                    type: 'error',
                                    title: "Error!",
                                    text: "PPA BLOCK DATA NOT AVAILABLE"
                                });
                            }
                            else {
                                try {
                                    blocksData = $.parseJSON(data.blockData);
                                    $('#totalClaim').val('0');
                                    var jsonData = $.parseJSON(data.blockData);
                                    var hideable = 'style="display:none;"';
                                    isAdvance = jsonData[0].ADVANCE_PAYMENT;
                                    if (jsonData[0].ADVANCE_PAYMENT == 'Y') {
                                        hideable = '';
                                    }
                                    else {
                                        hideable = 'style="display:none;"';
                                    }
                                    $('#tbl_monthly_epp').html('<thead id="theaddynamic"><tr><th>Select</th>   <th style="width: 10%;">Block / Complex </th>    <th style="width: 10%;">Fuel Type </th>      <th style="width: 10%;">Rate Valid From *</th>    <th style="width: 10%;">Rate Valid To *</th>    <th>Claim Total (Current Month) </th>  <th id="advTAP" ' + hideable + '>Adv. Total (Already Verified) </th>    <th id="remCM" ' + hideable + '>Remaining (Current Month) </th>    <th id="advNM" ' + hideable + '>Advance (Next Month) </th>    <th id="payCM" ' + hideable + '>Payable Current Month</th><th>Remarks</th><th style="text-align:center;"></th></tr></thead>');
                                    var blockBody = '';
                                    $('#tbl_monthly_cmp_fin > tbody').html('');
                                    $('#tbl_monthly_cmp_tech > tbody').html('');
                                    $('#ddlAddBlock').html('<option value="0">Select</option>');

                                    var compTab = tab + jsonData.length;
                                    $.each(jsonData, function (i, j) {
                                        if (j.COMPONENTS != null) {
                                            r = r + 1;
                                            blockBody += '<tr r="' + r + '" bisrequired="1" blockid="' + j.BLK_FUEL_ID_PK + '"><td><span class="radio radio-info"><input type="radio" name="blkRd" class="rd-blk"  r="' + r + '"  blockid="' + j.BLK_FUEL_ID_PK + '"></span></td> <td><input tabindex="-1" type="text" class="form-control txtBlock clsblk" required="" readonly valueid="' + j.BLK_FUEL_ID_PK + '" value="' + j.BLOCK_NO + '"></td><td><input tabindex="-1" type="text" class="form-control txtFuelType clsblk" required="" readonly value="' + j.FUEL_TYPE + '"></td> <td><input tabindex="' + tab + '" type="text" class="form-control makeEmpty clsblk dtfrom" maxlength="11" ratevalid="from" style="width:110px;background-color: rgb(251, 255, 193);" onchange="compdate(this);" readonly></td> <td><input tabindex="' + tab + '" type="text" class="form-control dtToDate makeEmpty clsblk" maxlength="11" ratevalid="to" style="width:110px;background-color: rgb(251, 255, 193);" onchange="compdate(this);" readonly></td> <td><input tabindex="-1" type="text" class="form-control txtClaimAmount makeZero clsblk" r="' + r + '" blockid="' + j.BLK_FUEL_ID_PK + '" value="0" readonly=""></td><td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk" value="' + j.ADVANCE_PAID + '" readonly> </td> <td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk" value="' + j.REMAINING_CURRENT_MONTH + '" readonly> </td><td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk" value="' + j.ADVANCE_NEXT_MONTH + '" readonly> </td> <td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk txtPCM" value="' + j.PAYABLE_CURRENT_MONTH + '" readonly></td> <td><input tabindex="' + tab + '" type="text" class="form-control txtBlockRemarks makeEmpty clsblk" maxlength="100"></td> <td><i class="ti-trash btn-delete btn-block btn-blk-delete" title="Delete" style="text-align: center;line-height: 2;color: red;background: #c6c6c6;"  r="' + r + '" blockid="' + j.BLK_FUEL_ID_PK + '"> </i></td></tr>';
                                            $('#ddlAddBlock').append('<option value="' + j.BLK_FUEL_ID_PK + '">' + j.BLOCK_NO + ' ( ' + j.FUEL_TYPE + ' )');
                                            var compData = $.parseJSON(j.COMPONENTS);
                                            var compTrsTech = '';
                                            var compTrsFin = '';
                                            var mndcolor = '';
                                            var showicon = '';
                                            var tdva = '';
                                            //INCLUD_IN_CLAIM_PORTAL
                                            $.each(compData, function (x, y) {
                                                if (y.IsMandatory == "Y")
                                                {
                                                    mndcolor = '#FBFFC1';
                                                    //$('.txtClaimFin').css('background-color', 'rgb(251, 255, 193)');
                                                } else
                                                {
                                                    mndcolor = '';
                                                }

                                                if (y.FORMULA != null) {
                                                    var abc = y.FORMULA, regex = /"/g;
                                                    abc = abc.replace(regex, '');
                                                }

                                                if ((y.COMP_NAME.toUpperCase() == 'D.H AMOUNT' && (y.FORMULA != '' ||  y.FORMULA != null))
                                                    || (y.COMP_NAME.toUpperCase() == 'K.H AMOUNT' && (y.FORMULA != '' || y.FORMULA != null))
                                                    || (y.COMP_NAME.toUpperCase() == 'K.L AMOUNT' && (y.FORMULA != '' || y.FORMULA != null))
                                                    || (y.COMP_NAME.toUpperCase() == 'FCC AMOUNT' && (y.FORMULA != '' || y.FORMULA != null))
                                                    || (y.COMP_NAME.toUpperCase() == 'FCC AMOUNT (W/O FACTOR)' && (y.FORMULA != '' || y.FORMULA != null))
                                                    || (y.COMP_NAME.toUpperCase() == 'NEO (KWH) (WEEKLY)' && (y.FORMULA != '' || y.FORMULA != null)))
                                                {
                                                    tdva = "style='vertical-align:middle;'"
                                                    showicon = '<i class="zmdi zmdi-info-outline" class="btn btn-secondary" style="font-size:14px;" data-    toggle="tooltip" data-placement="top" title="' + abc + '"></i>'
                                                }
                                                else
                                                {
                                                    showicon = '';
                                                    tdva = '';
                                                }
                                                if ((y.UNIT.match(/Rs.*/) && y.IS_INCLUDE_IN_TOTAL == 'NO') || (y.UNIT == '%' && y.IS_INCLUDE_IN_TOTAL == 'NO') || y.IS_INCLUDE_IN_TOTAL == 'YES') { //finance comp
                                                    compTrsFin += '<tr r="' + r + '"  style="display:none;" blockid="' + j.BLK_FUEL_ID_PK + '" compheaderid="' + y.COM_HEADER_ID + '" compidppa="' + y.COM_DEF_ID_FK + '" comptype="fin"><td><input tabindex="-1" type="text" class="form-control clsfin" readonly="" value="' + y.COMP_NAME + '" title="' + y.COMP_NAME + '"></td><td><input tabindex="-1" type="text" class="form-control clsfin" readonly="" value="' + y.UNIT + '"></td><td><input tabindex="' + compTab + '" type="text" class="form-control txtClaimFin clsfin" includeinclaimportal="' + y.INCLUDE_IN_CLAIM_PORTAL + '" includeindiarytotal="' + y.IS_INCLUDE_IN_TOTAL + '" r="' + r + '"  maxlength="20"  IsMandatory="' + y.IsMandatory + '"  blockid="' + j.BLK_FUEL_ID_PK + '" value="0" style="background-color:' + mndcolor + '"></td><td class="gstTD"><input tabindex="' + compTab + '" type="text" class="form-control txtGSTFin clsfin" value=""></td><td><input tabindex="' + compTab + '" type="text" class="form-control txtCompFinRemarks clsfin" maxlength="100"></td><td ' + tdva + '>' + showicon + '</td></tr>';

                                                }
                                                else {
                                                    compTrsTech += '<tr r="' + r + '" style="display:none;" blockid="' + j.BLK_FUEL_ID_PK + '" compheaderid="' + y.COM_HEADER_ID + '" compidppa="' + y.COM_DEF_ID_FK + '" comptype="tech"><td><input tabindex="-1" type="text" class="form-control clstech" readonly="" value="' + y.COMP_NAME + '" title="' + y.COMP_NAME + '"></td><td><input tabindex="-1" type="text" class="form-control clstech" readonly="" value="' + y.UNIT + '"></td><td><input tabindex="' + compTab + '" type="text" class="form-control txtClaimTech clstech" includeinclaimportal="' + y.INCLUDE_IN_CLAIM_PORTAL + '" includeindiarytotal="' + y.IS_INCLUDE_IN_TOTAL + '" maxlength="20"  IsMandatory="' + y.IsMandatory + '" blockid="' + j.BLK_FUEL_ID_PK + '" value="0" style="background-color:' + mndcolor + '"></td><td><input tabindex="' + compTab + '" type="text" maxlength="100" class="form-control txtCompFinRemarks clstech"></td></tr>';
                                                }

                                            });//end inner loop
                                            tab = tab + 1;
                                            compTab = compTab + 1;
                                            $('#tbl_monthly_cmp_fin > tbody').append(compTrsFin);
                                            $('#tbl_monthly_cmp_tech > tbody').append(compTrsTech);
                                        }
                                    });//end of first each
                                    //checkBlkRequired();
                                    $('#tbl_monthly_epp').append('<tbody>' + blockBody + '</tbody>');
                                    $('#btnAddFiles').attr('tabindex', compTab + 1);
                                    $('#prevTxtAreaRemarks').attr('tabindex', compTab + 1);
                                }
                                catch (err) {
                                    swal({
                                        title: "Error!",
                                        text: err,
                                        type: "warning"
                                    });
                                    return;
                                }

                            }//end of try block
                        },//end of ajax success
                        error: function (request, textStatus, errorThrown) {
                        }
                    });//end of create block ajax call

            });	// end of invoice type change event

            function numberWithCommasandMinusSign(x) {
                // return x.toString().replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                x = x.toString();
                if (x % 1 == 0) {
                    if (x.indexOf(".") < 0) {
                        x = x.replace(/\D-/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                        x += ".0000";
                    } else {
                        x = x.replace('.0000', '').replace('.000', '').replace('.00', '').replace('.0', '');
                        x = x.replace(/\D-/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                        x += ".0000";

                    }
                } else {
                    var index = x.indexOf(".");
                    var p1 = x.substring(0, index);
                    p1 = p1.replace(/\D-/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                    var p2 = x.substring(index);
                    p2 = p2 + "0000";
                    p2 = p2.substring(0, 5);
                    x = p1 + p2;
                }
                return x;
            }

            function numberWithCommas(x) {
                // return x.toString().replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                x = x.toString();
                if (x % 1 == 0) {
                    if (x.indexOf(".") < 0) {
                        x = x.replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                        x += ".0000";
                    } else {
                        x = x.replace('.0000', '').replace('.000', '').replace('.00', '').replace('.0', '');
                        x = x.replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                        x += ".0000";

                    }
                } else {
                    var index = x.indexOf(".");
                    var p1 = x.substring(0, index);
                    p1 = p1.replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                    var p2 = x.substring(index);
                    p2 = p2 + "0000";
                    p2 = p2.substring(0, 5);
                    x = p1 + p2;
                }
                return x;
            }


            function removeComma() {
                $('#totalClaim, .makeZero, .txtClaimTech, .txtClaimFin').each(function (index, element) {
                    var $val = $(this).val().replace(/,/g, '');
                    $(this).val($val);
                });
            }
            function addComma() {
                $('#totalClaim, .makeZero, .txtClaimTech, .txtClaimFin').each(function (index, element) {
                    var $val = $(this).val().replace(/,/g, '');
                    //if($($(this).parent().parent().children()[0]).children().val() == "Advance Already Verified"){
                    $val = numberWithCommasandMinusSign($val);
                    $(this).val($val);
                    /*}
                    else{
                        $val = numberWithCommas($val);
                        $(this).val($val);
                    }*/
                });
            }


            $('body').off('click', '#addblockrow');
            $('body').on('click', '#addblockrow', function (e) {
                e.preventDefault();
                headerID = $('#producerSite option:selected').attr('hid');

                if ($('#ddlAddBlock').val() == '0') {
                    return false;
                }
                else {
                    try {

                        var jsonData = blocksData;
                        //var hideable = 'style="display:none;"';
                        isAdvance = jsonData[0].ADVANCE_PAYMENT;
                        if (jsonData[0].ADVANCE_PAYMENT == 'Y') {
                            hideable = '';
                        }
                        else {
                            hideable = 'style="display:none;"';
                        }
                        //$('#tbl_monthly_epp').html('<thead id="theaddynamic"><tr><th>Select</th>   <th style="width: 10%;">Block / Complex </th>    <th style="width: 10%;">Fuel Type </th>      <th style="width: 10%;">Rate Valid From *</th>    <th style="width: 10%;">Rate Valid To *</th>    <th>Claim Total (Current Month) </th>  <th id="advTAP" ' + hideable + '>Adv. Total (Already Paid) </th>    <th id="remCM" ' + hideable + '>Remaining (Current Month) </th>    <th id="advNM" ' + hideable + '>Advance (Next Month) </th>    <th id="payCM" ' + hideable + '>Payable Current Month</th><th>Remarks</th><th style="text-align:center;">Action</th></tr></thead>');
                        var blockBody = '';
                        //$('#tbl_monthly_cmp_fin > tbody').html('');
                        //$('#tbl_monthly_cmp_tech > tbody').html('');
                        //$('#ddlAddBlock').html('<option value="0">Select</option>');
                        var tab = 11;
                        var compTab = tab + jsonData.length;
                        $.each(jsonData, function (i, j) {
                            if (j.COMPONENTS != null) {
                                if ($('#ddlAddBlock').val() == j.BLK_FUEL_ID_PK) {


                                    r = r + 1;
                                    blockBody += '<tr r="' + r + '" bisrequired="1" blockid="' + j.BLK_FUEL_ID_PK + '"><td><span class="radio radio-info"><input type="radio" name="blkRd"  r="' + r + '"  class="rd-blk" blockid="' + j.BLK_FUEL_ID_PK + '"></span></td> <td><input tabindex="-1" type="text" class="form-control txtBlock clsblk" required="" readonly valueid="' + j.BLK_FUEL_ID_PK + '" value="' + j.BLOCK_NO + '"></td><td><input tabindex="-1" type="text" class="form-control txtFuelType clsblk" required="" readonly value="' + j.FUEL_TYPE + '"></td> <td><input tabindex="' + tab + '" type="text" class="form-control makeEmpty clsblk dtfrom" maxlength="11" ratevalid="from" style="width:110px;background-color: rgb(251, 255, 193);" onchange="compdate(this);" readonly></td> <td><input tabindex="' + tab + '" type="text" class="form-control dtToDate makeEmpty clsblk" maxlength="11" ratevalid="to" style="width:110px;background-color: rgb(251, 255, 193);" onchange="compdate(this);" readonly></td> <td><input tabindex="-1" type="text" class="form-control txtClaimAmount makeZero clsblk" r="' + r + '"  blockid="' + j.BLK_FUEL_ID_PK + '" value="0" readonly=""></td><td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk" value="' + j.ADVANCE_PAID + '" readonly> </td> <td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk" value="' + j.REMAINING_CURRENT_MONTH + '" readonly> </td><td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk" value="' + j.ADVANCE_NEXT_MONTH + '" readonly> </td> <td ' + hideable + '><input tabindex="' + tab + '" type="text" class="form-control txtAdv makeZero clsblk txtPCM" value="' + j.PAYABLE_CURRENT_MONTH + '" readonly></td> <td><input tabindex="' + tab + '" type="text" class="form-control txtBlockRemarks makeEmpty clsblk" maxlength="100"></td> <td><i class="ti-trash btn-delete btn-block btn-blk-delete" title="Delete" style="text-align: center;line-height: 2;color: red;background: #c6c6c6;"  r="' + r + '"   blockid="' + j.BLK_FUEL_ID_PK + '"> </i></td></tr>';
                                    //$('#ddlAddBlock').append('<option value="' + j.BLK_FUEL_ID_PK + '">' + j.BLOCK_NO + ' ( ' + j.FUEL_TYPE + ' )');
                                    var compData = $.parseJSON(j.COMPONENTS);
                                    var compTrsTech = '';
                                    var compTrsFin = '';
                                    var mndcolor = '';
                                    var showicon = '';
                                    var tdva = '';
                                    $.each(compData, function (x, y) {

                                        debugger;
                                        if (y.IsMandatory == "Y")
                                        {
                                            mndcolor = '#FBFFC1';
                                        }
                                        else
                                        {
                                            mndcolor = '';
                                        }

                                        if (y.FORMULA != null) {
                                            var abc = y.FORMULA, regex = /"/g;
                                            abc = abc.replace(regex, '');
                                        }
                                        if ((y.COMP_NAME.toUpperCase() == 'D.H AMOUNT' && (y.FORMULA != '' || y.FORMULA != null))
                                            || (y.COMP_NAME.toUpperCase() == 'K.H AMOUNT' && (y.FORMULA != '' || y.FORMULA != null))
                                            || (y.COMP_NAME.toUpperCase() == 'K.L AMOUNT' && (y.FORMULA != '' || y.FORMULA != null))
                                            || (y.COMP_NAME.toUpperCase() == 'FCC AMOUNT' && (y.FORMULA != '' || y.FORMULA != null))
                                            || (y.COMP_NAME.toUpperCase() == 'FCC AMOUNT (W/O FACTOR)' && (y.FORMULA != '' || y.FORMULA != null))
                                            || (y.COMP_NAME.toUpperCase() == 'NEO (kWh) (Weekly)' && (y.FORMULA != '' || y.FORMULA != null)))
                                        {
                                            tdva = "style='vertical-align:middle;'"
                                            showicon = '<i class="zmdi zmdi-info-outline" class="btn btn-secondary" style="font-size:14px;" data-    toggle="tooltip" data-placement="top" title="' + abc + '"></i>'
                                        }
                                        else
                                        {
                                            showicon = '';
                                            tdva = '';
                                        }

                                        if ((y.UNIT.match(/Rs.*/) && y.IS_INCLUDE_IN_TOTAL == 'NO') || (y.UNIT=='%' && y.IS_INCLUDE_IN_TOTAL == 'NO') || y.IS_INCLUDE_IN_TOTAL == 'YES') {
                                            //finance comp
                                            compTrsFin += '<tr r="' + r + '"  style="display:none;" blockid="' + j.BLK_FUEL_ID_PK + '" compheaderid="' + y.COM_HEADER_ID + '" compidppa="' + y.COM_DEF_ID_FK + '" comptype="fin"><td><input tabindex="-1" type="text" class="form-control clsfin" readonly="" value="' + y.COMP_NAME + '" title="' + y.COMP_NAME + '"></td><td><input tabindex="-1" type="text" class="form-control clsfin" readonly="" value="' + y.UNIT + '"></td><td><input tabindex="' + compTab + '" type="text" class="form-control txtClaimFin clsfin" includeinclaimportal="' + y.INCLUDE_IN_CLAIM_PORTAL + '" includeindiarytotal="' + y.IS_INCLUDE_IN_TOTAL + '" r="' + r + '"  maxlength="20" IsMandatory="' + y.IsMandatory + '"  blockid="' + j.BLK_FUEL_ID_PK + '" value="0" style="background-color:' + mndcolor + '"></td><td class="gstTD"><input tabindex="' + compTab + '" type="text" class="form-control txtGSTFin clsfin" value=""></td><td><input tabindex="' + compTab + '" type="text" class="form-control txtCompFinRemarks clsfin" maxlength="100"></td><td ' + tdva + '>' + showicon +'</td></tr>';

                                        }
                                        else {
                                            compTrsTech += '<tr r="' + r + '" style="display:none;" blockid="' + j.BLK_FUEL_ID_PK + '" compheaderid="' + y.COM_HEADER_ID + '" compidppa="' + y.COM_DEF_ID_FK + '" comptype="tech"><td><input tabindex="-1" type="text" class="form-control clstech" readonly="" value="' + y.COMP_NAME + '" title="' + y.COMP_NAME + '"></td><td><input tabindex="-1" type="text" class="form-control clstech" readonly="" value="' + y.UNIT + '"></td><td><input tabindex="' + compTab + '" type="text" class="form-control txtClaimTech clstech" includeinclaimportal="' + y.INCLUDE_IN_CLAIM_PORTAL + '" includeindiarytotal="' + y.IS_INCLUDE_IN_TOTAL + '" maxlength="20" IsMandatory="' + y.IsMandatory + '" blockid="' + j.BLK_FUEL_ID_PK + '" value="0" style="background-color:' + mndcolor + '"></td><td><input tabindex="' + compTab + '" type="text" maxlength="100" class="form-control txtCompFinRemarks clstech"></td></tr>';
                                        }

                                    });//end inner loop
                                    tab = tab + 1;
                                    compTab = compTab + 1;
                                    $('#tbl_monthly_cmp_fin > tbody').append(compTrsFin);
                                    $('#tbl_monthly_cmp_tech > tbody').append(compTrsTech);

                                }//END OF if
                            }
                        });//end of first each
                        //checkBlkRequired();
                        $('#tbl_monthly_epp').append(blockBody);
                        var tabLength = $($('#tbl_monthly_epp > tbody > tr:last > td:last').prev().children()[0]).attr('tabindex');
                        $('.txtClaimTech').attr('tabindex', ++tabLength);
                        $('.txtCompFinRemarks').attr('tabindex', tabLength);
                        $('.txtClaimFin').attr('tabindex', ++tabLength);
                        $($('.txtClaimFin').next().children()[0]).attr('tabindex', ++tabLength);
                        $($('.txtClaimFin').next().next().children()[0]).attr('tabindex', ++tabLength);
                        $('#btnAddFiles').attr('tabindex', ++tabLength);
                        $('#prevTxtAreaRemarks').attr('tabindex', ++tabLength);
                    }
                    catch (err) {
                        swal({
                            title: "Error!",
                            text: err,
                            type: "warning"
                        });
                        return;
                    }

                }//end of try block

            });	//end of add block row button
            
            $('body').off('click', '.btn-blk-delete');
            $('body').on('click', '.btn-blk-delete', function () {
                var blkID = $(this).attr('blockid');
                var r = $(this).attr('r');
                var $tr = $(this).parent().parent();
                $('#tbl_monthly_cmp_tech > tbody > tr[blockid="' + blkID + '"][r="' + r + '"]').each(function (i, j) {
                    $(this).remove();
                });//end of each
                $('#tbl_monthly_cmp_fin > tbody > tr[blockid="' + blkID + '"][r="' + r + '"]').each(function (i, j) {
                    $(this).remove();
                });//end of each
                $tr.remove();
                if (blkID == r) {
                    var delblk = $('#tbl_monthly_epp').attr('dellblock');
                    if (delblk == "") {
                        delblk = r;
                    }
                    else {
                        delblk = delblk + "½" + r;
                    }
                    $('#tbl_monthly_epp').attr('dellblock', delblk);
                }

                if ($('.txtClaimFin').length > 0) {
                    $('.txtClaimFin').each(function (index, element) {
                        $(this).change();
                    });
                }
                else {
                    $('#totalClaim').val('0.0000');
                }
                if ($('#tbl_monthly_epp > tbody > tr').length > 0) {
                    var tabLength = $($('#tbl_monthly_epp > tbody > tr:last > td:last').prev().children()[0]).attr('tabindex');
                    $('.txtClaimTech').attr('tabindex', ++tabLength);
                    $('.txtCompFinRemarks').attr('tabindex', tabLength);
                    $('.txtClaimFin[r="' + r + '"]').attr('tabindex', ++tabLength);
                    $($('.txtClaimFin[r="' + r + '"]').next().children()[0]).attr('tabindex', ++tabLength);
                    $($('.txtClaimFin[r="' + r + '"]').next().next().children()[0]).attr('tabindex', ++tabLength);
                    $('#btnAddFiles').attr('tabindex', ++tabLength);
                    $('#prevTxtAreaRemarks').attr('tabindex', ++tabLength);
                }
                else {
                    $('#btnAddFiles').attr('tabindex', '12');
                    $('#prevTxtAreaRemarks').attr('tabindex', '13');
                }

            });//END OF BTN DELETE

            $('body').off('click', '.rd-blk');
            $('body').on('click', '.rd-blk', function () {
                var blkID = $(this).attr('blockid');
                var r = $(this).attr('r');
                $('#tbl_monthly_cmp_tech > tbody > tr[blockid] , #tbl_monthly_cmp_fin > tbody > tr[blockid]').hide();
                $('tr[blockid="' + blkID + '"][r="' + r + '"]').show();

                var tabLength = $($('#tbl_monthly_epp > tbody > tr:last > td:last').prev().children()[0]).attr('tabindex');
                $('.txtClaimTech').attr('tabindex', ++tabLength);
                $('.txtCompFinRemarks').attr('tabindex', tabLength);
                $('.txtClaimFin[r="' + r + '"]').attr('tabindex', ++tabLength);
                $($('.txtClaimFin[r="' + r + '"]').next().children()[0]).attr('tabindex', ++tabLength);
                $($('.txtClaimFin[r="' + r + '"]').next().next().children()[0]).attr('tabindex', ++tabLength);
                $('#btnAddFiles').attr('tabindex', ++tabLength);
                $('#prevTxtAreaRemarks').attr('tabindex', ++tabLength);
                if ($('#invoiceType>option:selected').text() == "Capacity Purchase Price") {
                    $('.gstTD').hide();
                    $('#gstFinE').hide();
                }
                else if ($('#invoiceType>option:selected').text() == "Bonus") {
                    $('.gstTD').hide();
                    $('#gstFinE').hide();
                }
                else {
                    $('.gstTD').show();
                    $('#gstFinE').show();
                }
            });

            $('body').off('click', '#btnClear');
            $('body').on('click', '#btnClear', function (e) {
                e.preventDefault();
                swal({
                    title: "Are you sure?",
                    text: "You are going to clear all fields!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn btn-danger",
                    confirmButtonText: "Yes, Claer all",
                    cancelButtonText: "No, cancel"
                }, function () {
                    if (sitesLength > 1)
                        $('#producerSite').val('0');
                    //if ($('#parentInvoice').hasClass('selectized')) {
                    //    $('#parentInvoice')[0].selectize.destroy();
                    //}
                    $("#invoiceType").val("0");
                    $("#invoiceType").trigger("change");
                    $("#invoiceDueDate").val("");
                    $("#invoiceLetterNumber").val("");
                    $("#invoiceLetterNumber").prop("disabled", false);
                    $("#invoiceDate").val("");
                    $("#invoicePeriodFrom").val("");
                    $("#invoicePeriodTo").val("");
                    $("#remarks").val("");
                    $('#parentstar').hide();
                    $("#parentInvoice").val("0");
                    $("#prevTxtAreaRemarks").val("");
                    $("#totalClaim").val("");
                    $('#attachmentFile').val('');
                    //$('#ulFileList').html('');
                    $("#tbl_attach > tbody").html('');
                    $("#invoicePeriodFromTime")[0].selectedIndex = 0;
                    $("#invoicePeriodToTime")[0].selectedIndex = 0;
                    try {
                        if ($.browser.msie) {
                            $('#attachmentFile').replaceWith($('#attachmentFile').clone());
                        }
                        else {
                            $('#attachmentFile').val('');
                        }
                        $('#attachmentFile').html('');
                    } catch (e) {
                        console.log(e);
                    }
                    swal("Cleared!", "All feilds have been cleared.", "success");
                });


            });//END OF BTN CLEAR CLICK
            $('body').off('keypress', '.txtClaimFin,  .txtClaimTech');
            $('body').on('keypress', '.txtClaimFin,  .txtClaimTech', function (event) {
                removeComma();
                var $this = $(this);

                if (event.which == 45) {
                    //if($($(this).parent().parent().children()[0]).children().val() == 'Advance Already Verified'){
                    if (this.value.length == 0)
                        return true;
                    else if (this.value.length > 0) {
                        if (this.selectionStart == 0)
                            return true;
                        else if (this.selectionEnd > 0 || this.selectionEnd < 0)
                            return false;
                    }
                    /*}
                    else{
                        return false;
                    }*/
                }
                else if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
                    ((event.which < 48 || event.which > 57) &&
                        (event.which != 0 && event.which != 8))) {
                    event.preventDefault();
                }

                var text = $(this).val();
                text = text.replace(/,/g, '');
                if ((event.which == 46) && (text.indexOf('.') == -1)) {
                    setTimeout(function () {
                        if ($this.val().substring($this.val().indexOf('.')).length > 5) {
                            $this.val($this.val().substring(0, $this.val().indexOf('.') + 5));
                        }
                    }, 1);
                }

                if ((text.indexOf('.') != -1) &&
                    (text.substring(text.indexOf('.')).length > 4) &&
                    (event.which != 0 && event.which != 8) &&
                    ($(this)[0].selectionStart >= text.length - 4)) {
                    event.preventDefault();
                }

            });
            $('body').off('keypress', '.makeZero, #txtAdjAmount');
            $('body').on('keypress', '.makeZero, #txtAdjAmount', function (event) {
                removeComma();

                var $this = $(this);
                if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
                    ((event.which < 48 || event.which > 57) &&
                        (event.which != 0 && event.which != 8))) {
                    event.preventDefault();
                }

                var text = $(this).val();
                text = text.replace(/,/g, '');
                if ((event.which == 46) && (text.indexOf('.') == -1)) {
                    setTimeout(function () {
                        if ($this.val().substring($this.val().indexOf('.')).length > 5) {
                            $this.val($this.val().substring(0, $this.val().indexOf('.') + 5));
                        }
                    }, 1);
                }

                if ((text.indexOf('.') != -1) &&
                    (text.substring(text.indexOf('.')).length > 4) &&
                    (event.which != 0 && event.which != 8) &&
                    ($(this)[0].selectionStart >= text.length - 4)) {
                    event.preventDefault();
                }

            }); // END OF KEY PRESS

            $('body').off('focusout', '.txtClaimFin');
            $('body').on('focusout', '.txtClaimFin', function (event) {
                if ($($(this).parent().parent().children()[0]).children().val() == "Advance Already Verified") {
                    if (parseFloat($(this).val()) > 0.0000) {
                        swal({
                            title: "Error",
                            text: "Please enter nagative value in 'Advance Already Verified'!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                            //,onAfterClose: () => {
                            //    setTimeout(() => $(this).focus(), 100)
                            //}
                        }, function () { setTimeout(() => $(this).focus(), 100); });
                        return false;
                    }
                }
            });

            $('body').off('change', '.txtClaimFin');
            $('body').on('change', '.txtClaimFin', function (event) {
                removeComma();
                debugger;
                if ($($(this).parent().parent().children()[0]).children().val() == "Advance Already Verified") {
                    if (parseFloat($(this).val()) > 0.0000) {
                        swal({
                            title: "Error",
                            text: "Please enter nagative value in 'Advance Already Verified'!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                            //,onAfterClose: () => {
                            //    setTimeout(() => $(this).focus(), 100)
                            //}
                        }, function () { setTimeout(() => $(this).focus(), 100); });
                        return false;
                    }
                }
                var blkID = $(this).attr('blockid');
                var r = $(this).attr('r');
                var ttl = parseFloat(0);
                $('.txtClaimFin[blockid="' + blkID + '"][r="' + r + '"][includeinclaimportal="YES"]').each(function (i, j) {
                    try {
                        if ($(this).val() == '')
                            return;
                        var x = parseFloat($(this).val());
                        ttl += x;
                    }
                    catch (e) {
                        return false;
                    }
                });//end of each
                ttl = ttl.toFixed(4);
                $('.txtClaimAmount[blockid="' + blkID + '"][r="' + r + '"]').val(ttl);
                var ctrlTCA = $('.txtClaimAmount[blockid="' + blkID + '"][r="' + r + '"]');
                var ttlAV = parseFloat(0), ttlNM = parseFloat(0);
                $('.txtClaimFin[blockid="' + blkID + '"][r="' + r + '"][includeinclaimportal="NO"]').each(function (i, j) {
                    if ($($(this).parent().parent().children()[0]).children().val() == "Advance Next Month") {
                        try {
                            if ($(this).val() == '')
                                return;
                            var x = parseFloat($(this).val());
                            ttlNM += x;
                        }
                        catch (e) {
                            return false;
                        }
                    }
                    else if ($($(this).parent().parent().children()[0]).children().val() == "Advance Already Verified") {
                        try {
                            if ($(this).val() == '')
                                return;
                            var x = parseFloat($(this).val());
                            ttlAV += x;
                        }
                        catch (e) {
                            return false;
                        }
                    }
                });
                if ($('.txtClaimFin[blockid="' + blkID + '"][r="' + r + '"][includeinclaimportal="NO"]').length != 0) {
                    if ($($(this).parent().parent().children()[0]).children().val() == "Advance Already Verified" || $($(this).parent().parent().children()[0]).children().val() == "Advance Next Month" || $($(this).parent().parent().children()[0]).children().val() == "CPP Amount") {
                        $(ctrlTCA).parent().next().children().val(ttlAV);
                        $(ctrlTCA).parent().next().next().next().children().val(ttlNM);
                        $(ctrlTCA).parent().next().next().children().val(parseFloat($(ctrlTCA).parent().next().children().val()) + parseFloat($(ctrlTCA).val()));
                        var fixPcmAmount = parseFloat($(ctrlTCA).parent().next().next().children().val()) + parseFloat($(ctrlTCA).parent().next().next().next().children().val());
                        fixPcmAmount = fixPcmAmount.toFixed(4);
                        $(ctrlTCA).parent().next().next().next().next().children().val(fixPcmAmount);//(parseFloat($(ctrlTCA).parent().next().next().children().val()) + parseFloat($(ctrlTCA).parent().next().next().next().children().val()));
                        //$(ctrlTCA).parent().next().next().next().next().children().val(parseFloat($(ctrlTCA).parent().next().next().children().val()) + parseFloat($(ctrlTCA).parent().next().next().next().children().val()));
                    }
                }
                var ttlx = parseFloat(0);
                if (isAdvance != "Y") {
                    $('.txtClaimAmount').each(function (x, y) {
                        try {
                            var x = parseFloat($(this).val());
                            ttlx += x;
                        }
                        catch (e) {
                            return false;
                        }
                    });
                    blkClaim = ttlx;
                    $('#totalClaim').val(ttlx);
                }
                else {
                    $('.txtPCM').each(function (x, y) {
                        try {
                            var x = parseFloat($(this).val());
                            ttlx += x;
                        }
                        catch (e) {
                            return false;
                        }
                    });
                    blkClaim = ttlx;
                    $('#totalClaim').val(ttlx);
                }
                addComma();
            });
            $('body').off('change', '.makeZero, .txtClaimTech, #txtAdjAmount');
            $('body').on('change', '.makeZero, .txtClaimTech, #txtAdjAmount', function (event) {
                //var $val = $(this).val().replace(/,/g, '');
                //$val = numberWithCommas($val);
                //$(this).val($val);
                addComma();
            });
            $('body').off("paste", '.txtClaimFin,.makeZero,  .txtClaimTech, #txtAdjAmount');
            $('body').on("paste", '.txtClaimFin,.makeZero, .txtClaimTech, #txtAdjAmount', function (e) {
                var text = e.originalEvent.clipboardData.getData('Text');
                text = text.replace(/,/g, '');
                if ($.isNumeric(text)) {
                    if ((text.substring(text.indexOf('.')).length >= 5) && (text.indexOf('.') > -1)) {
                        e.preventDefault();
                        $(this).val(text.substring(0, text.indexOf('.') + 5));
                        $(this).change();
                    }
                }
                else {
                    e.preventDefault();
                    swal({
                        title: "Invalid Input",
                        text: "Please enter only numeric values!",
                        type: "warning",
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK"
                        //,onAfterClose: () => {
                        //    setTimeout(() => $(this).focus(), 100)
                        //}
                    }, function () { setTimeout(() => $(this).focus(), 100); });
                }
            });

            $('body').off('change', '.txtPCM');
            $('body').on('change', '.txtPCM', function (event) {
                removeComma();
                var ttlx = parseFloat(0);
                $('.txtPCM').each(function (x, y) {
                    try {
                        var x = parseFloat($(this).val());
                        ttlx += x;
                    }
                    catch (e) {
                        return false;
                    }
                });
                $('#totalClaim').val(ttlx);
                addComma();
            });

            $('body').off('keypress', '.txtGSTFin');
            $('body').on('keypress', '.txtGSTFin', function (e) {
                /*if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    return false;
                }*/
                var text = $(this).val();
                var $this = $(this);
                if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
                    ((event.which < 48 || event.which > 57) &&
                        (event.which != 0 && event.which != 8)) || text.length >= 5) {
                    event.preventDefault();

                }

                text = text.replace(/,/g, '');
                if ((event.which == 46) && (text.indexOf('.') == -1)) {
                    setTimeout(function () {
                        if ($this.val().substring($this.val().indexOf('.')).length > 5) {
                            $this.val($this.val().substring(0, $this.val().indexOf('.') + 5));
                        }
                    }, 1);
                }

                if ((text.indexOf('.') != -1) &&
                    (text.substring(text.indexOf('.')).length > 2) &&
                    (event.which != 0 && event.which != 8) &&
                    ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }

            });

            $('body').off('change', '.txtGSTFin');
            $('body').on('change', '.txtGSTFin', function (e) {
                e.preventDefault();
                fullvalidation('', this);
            });

            $('body').off('keyup', '.txtGSTFin');
            $('body').on('keyup', '.txtGSTFin', function () {
                if (parseFloat($(this).val()) > 100) {
                    swal({
                        title: "Error",
                        text: "GST Percentage must be between 0 to 100!",
                        type: "warning"
                    });
                    $(this).val('');
                }

            });//end of key up


            //FILE ATTACHMENTS STARTED
            //FILE ATTACHMENTS STARTED
            //FILE ATTACHMENTS STARTED
            //FILE ATTACHMENTS STARTED

            $('#myModal').dialog({
                autoOpen: false,
                height: 455,
                width: 650,
                modal: true,
                show: {
                    effect: "clip",
                    duration: 500
                },
                hide: {
                    effect: "clip",
                    duration: 500
                }
            });





            $('body').off('click', '#btnAddFiles');
            $('body').on('click', '#btnAddFiles', function (e) {
                e.preventDefault();
                $('#attachmentTitle').val('');
                $('#attachmentDesc').val('');
                $('#btnUpload').attr('tg', '0');
                $('#btnUpload').attr('typ', "0");
                $('#myModal').dialog('open');
            });//end of btnAddFiles

            $('body').off("click", '#btnCloseDialog');
            $('body').on("click", '#btnCloseDialog', function (e) {
                e.preventDefault();
                $('#myModal').dialog('close');
                $('#attachmentTitle').val('');
                $('#attachmentDesc').val('');
                $('#attachmentFile').val('');
                try {
                    if ($.browser.msie) {
                        $('#attachmentFile').replaceWith($('#attachmentFile').clone());
                    }
                    else {
                        $('#attachmentFile').val('');
                    }
                    $('#attachmentFile').html('');
                } catch (e) {
                    return false;
                }
            });


            $('body').off('click', '.fileedit');
            $('body').on('click', '.fileedit', function (e) {
                e.preventDefault();
                var fid = $(this).parent().parent().parent().attr('fileid');
                var $tr = $(this).parent().parent().parent();
                $('#tbl_attach tbody tr').removeAttr('bisedit');
                $tr.attr('bisedit', 'bisedit');
                $('#attachmentTitle').val($tr.attr('ftitle'));
                $('#attachmentDesc').val($tr.attr('fdescription'));
                $('#btnUpload').attr('tg', fid);
                $('#btnUpload').attr('typ', "1");
                $('#myModal').dialog('open');
            });//END OF Edit BUTNN

                var fileNames = []; // GLOBAL arr
            $('body').off('click', '#btnUpload');
            $('body').on('click', '#btnUpload', function (e) {
                e.preventDefault();
                var $typ = $(this).attr('typ');
                var $tg = $(this).attr('tg');
                if ($('#attachmentFile')[0].files.length == 0 && $(this).attr('typ') == "0") {
                    swal({
                        title: "Error",
                        text: "Please Select File!",
                        type: "warning"
                    });
                    return false;
                }

                var fullPath = $('#attachmentFile').val(); // Get the full file path
                var fileNameWithExtension = fullPath.split('\\').pop(); // Extract the filename with extension
                var fileNameWithoutExtension = fileNameWithExtension.split('.').slice(0, -1).join('.'); // Remove the extension


                // Validate the file name (allow only alphabets, numbers, and spaces)
                var alphanumericPattern = /^[a-zA-Z0-9\s.-]*$/;
                if (!alphanumericPattern.test(fileNameWithoutExtension)) {
                    swal({
                        title: "Error",
                        text: "File name can only contain alphabets, numbers, and spaces! Please rename the file and try again.",
                        type: "warning"
                    });
                    return false;
                }
                if ($('#attachmentTitle').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please enter attachment title!",
                        type: "warning"
                    });
                    return false;
                }
                if ($('#attachmentFile')[0].files.length == 0 && $typ == "1") {
                    $('#tbl_attach tbody tr[bisedit="bisedit"]').attr('ftitle', $('#attachmentTitle').val());
                    $('#tbl_attach tbody tr[bisedit="bisedit"]').attr('fdescription', $('#attachmentDesc').val());
                    $($('#tbl_attach tbody tr[bisedit="bisedit"]').find('td')[0]).html('<span>' + $('#attachmentTitle').val() + '</span>');
                    $($('#tbl_attach tbody tr[bisedit="bisedit"]').find('td')[1]).html('<span>' + $('#attachmentDesc').val() + '</span>');
                    if ($tg != "0") {
                        $('#tbl_attach tbody tr[bisedit="bisedit"]').attr('fileupdate', 'fileupdate');
                    }
                    $('#myModal').dialog('close');
                    return false;
                }
                else if ($('#attachmentFile')[0].files.length > 0 && $typ == "1") {
                    $($('#tbl_attach tbody tr[bisedit="bisedit"]').find('.filedelete')[0]).click();
                    $('#tbl_attach tbody tr[bisedit="bisedit"]').remove();


                }

                var fileTitle = $('#attachmentTitle').val();
                var fileDesc = $('#attachmentDesc').val();
                var file = $('#attachmentFile')[0].files[0],
                    fileName = file.name,
                    fileType = file.type,
                    fileSize = file.size;

                var fileNameExists = fileNames.includes(fileName);
                if (!fileNameExists) {
                    fileNames.push(fileName);
                }
                else {
                    swal({
                        title: "Error",
                        text: "Selected file has already been attached! Please select a different file.",
                        type: "warning"
                    });
                    return false;
                }
                var fileExt = fileName.split('.').pop();

                if (fileExt == 'rar') {
                    fileType = 'application/x-rar-compressed, application/octet-stream';
                }
                else if (fileExt == 'zip') {
                    fileType = 'application/zip';
                }

                var sizeLimit = 0, fileSizeMsg = '';
                if (fileType == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || fileType == 'application/vnd.ms-excel' || fileType == 'application/pdf') {
                    sizeLimit = 5242880;
                    fileSizeMsg = "File size must be less than 5MB!";
                }
                else {
                    sizeLimit = 2097152;
                    fileSizeMsg = "File size must be less than 2MB!";
                }

                if (fileSize > sizeLimit) {
                    swal({
                        title: "Error",
                        text: fileSizeMsg,
                        type: "warning"
                    });
                    return false;
                }

                var filedata;
                var input = $('#attachmentFile');
                var reader = new FileReader();
                reader.onload = function () {
                    var arrayBuffer = reader.result;

                    arrayBuffer = arrayBuffer.substring(arrayBuffer.indexOf(",") + 1);
                    var base64String = arrayBuffer;
                    var ext = fileName.split('.').pop();
                    //$("#ulFileList").append('<li class="files" fileid="0" fext=".' + ext + '" ftype="' + fileType + '" fname="' + fileName + '" ftitle="' + $('#attachmentTitle').val() + '" fdescription="' + $('#attachmentDesc').val() + '"  base64="' + base64String + '"> <a href="data:' + fileType + ";base64," + base64String + '" download="' + fileName + '">' + fileTitle + '</a>&nbsp;&nbsp;&nbsp;<label class="filedelete" style="cursor:pointer;">Delete File</label><label class="dnload" fileid="0" style="cursor: pointer;float: right; margin-right: 40px;">Download</label></li>');
                    $("#tbl_attach > tbody").append('<tr class="files" fileid="0" fext=".' + ext + '" ftype="' + fileType + '" fname="' + fileName + '" ftitle="' + $('#attachmentTitle').val() + '" fdescription="' + $('#attachmentDesc').val() + '"  base64="' + base64String + '"> <td><a href="data:' + fileType + ";base64," + base64String + '" download="' + fileName + '">' + fileTitle + '</a></td><td><span>' + fileDesc + '</span></td><td><span>' + fileName + '</span></td>\
                    <td class="clstdEdit"><center><span class="fileedit zmdi zmdi-edit" style="cursor:pointer;color:#0095eb;font-size: 1.5em;"></span></center></td>\
                    <td class="clstdDelete"><center><span class="filedelete zmdi zmdi-delete" style="cursor:pointer;color:red;font-size: 1.5em;"></span></center></td>\
                    <td><center><span class="dnload zmdi zmdi-format-valign-bottom zmdi-hc-2x" fileid="0" style="cursor: pointer;color:#0095eb;"></span></center></td></tr>');
                    $('#myModal').dialog('close');
                    $('#attachmentTitle').val('');
                    $('#attachmentDesc').val('');
                    $('#attachmentFile').val('');
                    try {
                        if ($.browser.msie) {
                            $('#attachmentFile').replaceWith($('#attachmentFile').clone());
                        }
                        else {
                            $('#attachmentFile').val('');
                        }
                        $('#attachmentFile').html('');
                    } catch (e) {
                        return false;
                    }
                };
                reader.readAsDataURL(file);

            });//end of click event







            $('body').off('click', '.filedelete');
            $('body').on('click', '.filedelete', function (e) {
                e.preventDefault();
                var fid = $(this).parent().parent().parent().attr('fileid');
                if (fid != "0") {
                    var pdlist = "";
                    try {
                        //pdlist = $('#ulFileList').attr('dellist');
                        pdlist = $('#tbl_attach').attr('dellist');
                        if (pdlist == "") {
                            pdlist = fid
                        }
                        else {
                            pdlist = pdlist + '½' + fid;
                        }
                        //$('#ulFileList').attr('dellist', pdlist);
                        $('#tbl_attach').attr('dellist', pdlist);
                    } catch (e) {
                        pdlist = fid;
                        //$('#ulFileList').attr('dellist', pdlist);
                        $('#tbl_attach').attr('dellist', pdlist);
                    }
                }

                $(this).parent().parent().parent().remove();
            });//END OF DELETE BUTNN


            //$('body').off('click', '.dnload');
            //$('body').on('click', '.dnload', function (e) {
            //    e.preventDefault();
            //    var $id = $(this).attr('fileid');
            //    var $fname = $(this).attr('fname');

            //    if ($id == "0") {
            //        var link = $(this).parent().parent().parent().find('a')[0];
            //        link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));
            //    }
            //    else {

            //        var fromdata = new FormData();
            //        fromdata.append("vls", '2½' + $id);
            //        var choice = {};
            //        choice.url = "/Invoice/AjaxCall" + $(location).attr("search");
            //        choice.type = "POST";
            //        choice.responseType = "blob";
            //        choice.data = fromdata;
            //        choice.contentType = false;
            //        choice.processData = false;
            //        choice.success = function (result) {

            //            result = $.parseJSON(result);
            //            var myUrl = "content/_FilesNew/" + $id + "." + result.ext;
            //            var win = window.open(myUrl, '_blank');
            //            if (win) {
            //                //Browser has allowed it to be opened
            //                win.focus();
            //            } else {
            //                //Browser has blocked it
            //                alert('Please allow popups for this website');
            //            }


            //            //var link = document.createElement('a');
            //            //link.href = 'data:' + result.typ + ';base64,' + result.fdata;
            //            //link.download = result.name;
            //            //link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));
            //        };//END OF SUCCESS
            //        choice.error = function (err) {
            //            console.log(err.statusText);
            //        };
            //        $.ajax(choice);
            //    }

            //});
           
                ////FILE ATTACHMENTS start

                $('body').off('click', '.dnload');
                $('body').on('click', '.dnload', function (e) {
                    e.preventDefault();

                    var $id = $(this).attr('fileid');
                    var $fname = $(this).attr('fname');

                    if ($id == "0") {
                        var link = $(this).parent().parent().parent().find('a')[0];
                        link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));
                    } else {
                        var fromdata = new FormData();
                        fromdata.append("vls", '2½' + $id);

                        $.ajax({
                            url: "/Invoice/AjaxCall" + $(location).attr("search"),
                            type: "POST",
                            responseType: "blob",
                            data: fromdata,
                            contentType: false,
                            processData: false,
                            success: function (result) {
                                result = $.parseJSON(result);
                                debugger;
                                // Decode base64 file data
                                var byteCharacters = atob(result.fdata);
                                var byteNumbers = new Array(byteCharacters.length);
                                for (var i = 0; i < byteCharacters.length; i++) {
                                    byteNumbers[i] = byteCharacters.charCodeAt(i);
                                }
                                var byteArray = new Uint8Array(byteNumbers);
                                var fileBlob = new Blob([byteArray], { type: result.typ });
                                var fileURL = URL.createObjectURL(fileBlob);

                                if (result.typ === "application/pdf") {
                                    // Open PDF files in a new tab
                                    window.open(fileURL, '_blank');
                                } else {
                                    // Trigger download for other file types with a specified name
                                    var downloadLink = document.createElement('a');
                                    downloadLink.href = fileURL;
                                    downloadLink.download = result.name; // Set the file name from the result
                                    document.body.appendChild(downloadLink);
                                    downloadLink.click();
                                    document.body.removeChild(downloadLink);
                                }

                                // Revoke the object URL after use
                                setTimeout(function () {
                                    URL.revokeObjectURL(fileURL);
                                }, 1000);
                            },
                            error: function (err) {
                                console.log(err.statusText);
                            }
                        });
                    }
                });
                ////FILE ATTACHMENTS END

                $('body').off('click', '.dnloadDisp');
                $('body').on('click', '.dnloadDisp', function (e) {
                    e.preventDefault();
                    var $id = $(this).attr('fileid');
                    var $fname = $(this).attr('fname');
                    var $filedata = $(this).attr('filedata');

                    if ($id == "0") {
                        var link = $(this).parent().parent().parent().find('a')[0];
                        link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));
                    }
                    else {

                        var fromdata = new FormData();
                        fromdata.append("vls", '18½' + $id + '½' + $filedata);
                        var choice = {};
                        choice.url = "/Invoice/AjaxCall" + $(location).attr("search");
                        choice.type = "POST";
                        choice.responseType = "blob";
                        choice.data = fromdata;
                        choice.contentType = false;
                        choice.processData = false;
                        choice.success = function (result) {
                            debugger;
                            result = $.parseJSON(result);
                            console.log(result);
                            var myUrl = "/content/_FilesNew/" + $id + "." + result.ext;
                            var win = window.open(myUrl, '_blank');
                            if (win) {
                                //Browser has allowed it to be opened
                                win.focus();
                            } else {
                                //Browser has blocked it
                                alert('Please allow popups for this website');
                            }


                            //var link = document.createElement('a');
                            //link.href = 'data:' + result.typ + ';base64,' + result.fdata;
                            //link.download = result.name;
                            //link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));
                        };//END OF SUCCESS
                        choice.error = function (err) {
                            console.log(err.statusText);
                        };
                        $.ajax(choice);
                    }

                });
            ////FILE ATTACHMENTS END

            $('body').off('click', '.btnAction');
            $('body').on('click', '.btnAction', function (e) {
                e.preventDefault();
                var ComClaim = 0.0000, blkClaim = 0.0000;
                var flg = true;
                /*var flg = true,ctrl;
                $('.txtGSTFin').each(function (index, element) {
                    if ($.trim($(this).val())=="") {

                        swal({
                            title: "Error",
                            text: "Please enter valid GST Percentage...!",
                            icon: "warning",
                            dangerMode: true
                        });
                        ctrl = $(this);
                        flg = false;
                    }

                });
                if (flg==false) {
                    ctrl.focus();
                    return;
                }*/

                var btnStatus = $(this).val();
                var isValidationPassed = validationforWHT(btnStatus);

                if (!isValidationPassed) {
                    return false;
                }
                var isTrue = checkEmpty(btnStatus);
                if (isTrue) {
                    debugger;
                    removeComma();

                    // IS MANDATORY FOR TECH
                    $('#tbl_monthly_cmp_tech >tbody> tr .txtClaimTech').each(function (i, j) {

                        if ($(this).attr('ismandatory') == "Y" && ($(this).val() == "" || $(this).val() == 0.0000)) {
                            var thisCtrl = this;
                            var CompName = $($(this).parent().parent().children()[0]).children().val();
                            swal({
                                title: "Error",
                                text: "Please enter the value of " + CompName,
                                type: "warning",
                                showCancelButton: false,
                                confirmButtonClass: "btn btn-danger",
                                confirmButtonText: "OK"
                                //,onAfterClose: () => {
                                //    setTimeout(() => $(this).focus(), 100)
                            }, function () {
                                setTimeout(() => $(thisCtrl).focus(), 100);

                            });

                            flg = false;
                            return false;
                        }
                    });
                    if (!flg) {
                        return false;
                    }

                    $('#tbl_monthly_cmp_fin >tbody> tr .txtClaimFin').each(function (i, j) {
                        if ($(this).attr('includeinclaimportal') == "YES" ||
                            (
                                // $(this).attr('includeinclaimportal') == "NO" &&
                                ($($(this).parent().parent().children()[0]).children().val() == "Advance Next Month" || $($(this).parent().parent().children()[0]).children().val() == "Advance Already Verified"))) {
                            ComClaim += parseFloat($(this).val());
                        }

                        if ($(this).attr('ismandatory') == "Y" && ($(this).val() == "" || $(this).val() == 0.0000)) {
                            var thisCtrl = this;
                            var CompName = $($(this).parent().parent().children()[0]).children().val();
                            swal({
                                title: "Error",
                                text: "Please enter the value of " + CompName,
                                type: "warning",
                                showCancelButton: false,
                                confirmButtonClass: "btn btn-danger",
                                confirmButtonText: "OK"
                                //,onAfterClose: () => {
                                //    setTimeout(() => $(this).focus(), 100)
                            }, function () {
                                setTimeout(() => $(thisCtrl).focus(), 100);

                            });

                            flg = false;
                            return false;
                        }

                    });

                    if (!flg)
                    {
                        return false;
                    }

                    if ($('#tbl_monthly_epp > tbody > tr .txtPCM').parent().css('display') == 'none') {

                        $('#tbl_monthly_epp > tbody > tr .txtClaimAmount').each(function (i, j) {

                            blkClaim += parseFloat($(this).val());
                        });

                    }
                    else {

                        $('#tbl_monthly_epp > tbody > tr .txtPCM').each(function (i, j) {

                            blkClaim += parseFloat($(this).val());
                        });


                    }


                    ComClaim = ComClaim.toFixed(4);
                    blkClaim = blkClaim.toFixed(4);


                    addComma();

                    ComClaim = parseFloat(ComClaim);
                    blkClaim = parseFloat(blkClaim);


                    var $val = $('#totalClaim').val().replace(/,/g, '');
                    //numberWithCommasandMinusSign(fincompsum.toString());
                    if (blkClaim != parseFloat($val)) {
                        swal({
                            title: "Error",
                            text: "Total Claim amount is not equal to Sum of Financial Claim...!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                        });

                        return false;
                    }

                    if (blkClaim != ComClaim) {
                        swal({
                            title: "Error",
                            text: "Financial Claim Sum is not equal to Sum of Block Claim...!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                        });

                        return false;
                    }

                    if ($('#totalClaim').val() == 0) {
                        swal({
                            title: "Are you sure?",
                            text: "You are about to create an invoice with zero total claim.",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "Continue"
                        },
                            function () {
                                callAjax(btnStatus);

                            }
                        );
                        //.then((result) => {
                        //    if (result.value) {
                        //        callAjax(btnStatus);
                        //    }
                        //    else {
                        //        swal.close();
                        //    }
                        //}
                        //);
                    }
                    else {
                        if (btnStatus == "Draft") {
                            callAjax(btnStatus);
                        }
                        else {
                            swal({
                                title: "Submit Confirmation",
                                text: "Do you want to submit this invoice?",
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonClass: "btn btn-danger",
                                confirmButtonText: "Continue"
                            },
                                function () {
                                    callAjax(btnStatus);
                                    //swal("Success!", "Record has been saved Successfully.", "success");
                                });
                            //    .then((result) => {
                            //    if (result.value) {
                            //        callAjax(btnStatus);
                            //    }
                            //    else {
                            //        swal.close();
                            //    }
                            //});
                        }
                    }
                }

            });// end of save button

            function callAjax(value) {
                var choice = {};
                var fromdata = new FormData();
                var myForm = '';
                var blockData = '';
                var blockDataNew = '';
                var filekData = '';
                if ($('#btnSave').attr('tg') == "0") {

                    myForm = $('#producerSite option:selected').attr('hid') + '½';

                    // myForm = headerID + '½';
                    /*$('.frm').each(function (i, j) {
                        myForm += $(this).val() + '½';
                    });*/
                    myForm += $('#powerProducer').val() + '½' + $('#producerSite').val() + '½' + $('#status').val() + '½' + $('#invoiceType').val() + '½' + $('#invoiceDueDate').val() + '½' + $('#invoiceLetterNumber').val() + '½' + $('#parentInvoice').val() + '½' + $('#invoiceDate').val() + '½' + $('#invoicePeriodFrom').val() + '½' + $('#invoicePeriodFromTime').val() + '½' + $('#invoicePeriodTo').val() + '½' + $('#invoicePeriodToTime').val() + '½' + $('#currency').val() + '½' + $('#totalClaim').val() + '½' + $('#remarks').val() + '½';
                    myForm += value + '½' + $('#prevTxtAreaRemarks').val();

                    blockData = '';
                    $('#tbl_monthly_epp tbody tr').each(function () {

                        var $tr = $(this);
                        var r = $tr.attr('r');
                        blockData += $(this).attr('blockid') + '½' + $(this).attr('bisrequired') + '½';
                        $tr.find('.clsblk').each(function (i, j) {
                            blockData += $(this).val() + '½';
                        });
                        blockData += '¼';
                        blockData = blockData.replace('½¼', '¡');

                        var id = $(this).attr('blockid');

                        $('#tbl_monthly_cmp_tech > tbody > tr[blockid="' + id + '"][r="' + r + '"]').each(function (i, j) {
                            var $tr = $(this);
                            blockData += $(this).attr('comptype') + '½' + $(this).attr('compheaderid') + '½' + $(this).attr('compidppa') + '½';
                            $tr.find('.clstech').each(function (a, b) {
                                blockData += $(this).val() + '½';
                            });
                            blockData += $tr.find('.txtClaimTech').attr('includeindiarytotal') + '½';
                            blockData += $tr.find('.txtClaimTech').attr('ismandatory') + '½½';
                            blockData += '¼';
                            blockData = blockData.replace('½¼', '¡');
                        });
                        blockData += '¼';
                        blockData = blockData.replace('¡¼', '¡');
                        blockData = blockData.replace('¡¼', '¡');

                        $('#tbl_monthly_cmp_fin > tbody > tr[blockid="' + id + '"][r="' + r + '"]').each(function (i, j) {
                            var $tr = $(this);
                            blockData += $(this).attr('comptype') + '½' + $(this).attr('compheaderid') + '½' + $(this).attr('compidppa') + '½';
                            $tr.find('.clsfin').each(function (c, d) {
                                blockData += $(this).val() + '½';
                            });
                            blockData += $tr.find('.txtClaimFin').attr('includeindiarytotal') + '½';
                            blockData += $tr.find('.txtClaimFin').attr('ismandatory') + '½½';
                            blockData += '¼';
                            blockData = blockData.replace('½¼', '¡');
                            blockData = blockData.replace('¡¼', '¡');
                        });
                        blockData += '¼';
                        blockData = blockData.replace('¡¼', '»');
                    });
                    blockData += '¼';
                    blockData = blockData.replace('»¼', '');


                    filekData = '';
                    $('.files[fileid="0"]').each(function (iii, jjj) {
                        // element == this
                        filekData += $(this).attr('fext') + '½' + $(this).attr('ftype') + '½' + $(this).attr('fname') + '½' + $(this).attr('ftitle') + '½' + $(this).attr('fdescription') + '½' + $(this).attr('base64') + '¡';
                    });
                    filekData += '¼';
                    filekData = filekData.replace('¡¼', '');

                    var adjData = '';
                    $('#tblADJ tbody tr').each(function (index, element) {
                        var $tr = $(this);
                        adjData += $tr.attr('aid') + "½" + $($tr.find('td')[0]).html() + "½" + $($tr.find('td')[1]).html() + "½" + $($tr.find('td')[2]).html() + "½" + $($tr.find('td')[3]).html() + "¼";
                    });
                    if (adjData.endsWith("¼")) {
                        adjData += "¡";
                        adjData = adjData.replace('¼¡', '');
                    }

                    fromdata.append("strFormData", myForm);
                    fromdata.append("strBlockData", blockData);
                    fromdata.append("strfilekData", filekData);
                    fromdata.append("stradjData", adjData);
                    fromdata.append("stradjDelData", $('#tblADJ').attr('adjdellist'));

                    //choice.url = "https://cppa2.azurewebsites.net/v1/invoice/CreateInvoice?strFormData=0&strBlockData=0";
                    choice.url = "/Invoice/CreateInvoice" + $(location).attr("search");
                    choice.type = "POST";
                    choice.data = fromdata;
                    //choice.headers = { "Token": Token };
                    choice.contentType = false;
                    choice.processData = false;
                    choice.beforeSend = function () {
                        $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                    };
                    choice.complete = function () {
                        $.unblockUI();
                    };
                    choice.success = function (result) {

                        if (result == "0") {
                            value = "saved";
                            swal({
                                title: "Invoice!",
                                text: "Invoice has been " + value.toLowerCase() + " successfully.",
                                type: "success",
                                showCancelButton: false,
                                showConfirmButton: true
                            },
                                function () {
                                    goToHome();
                                });
                            //location.href = _spPageContextInfo.webAbsoluteUrl + "/Pages/Home.aspx";
                            return false;
                        }
                        else if (parseInt(result) > 0) {
                            swal({
                                title: "Invoice!",
                                text: "Invoice with transaction no " + result + " has been " + value.toLowerCase() + " successfully.",
                                type: "success",
                                showCancelButton: false,
                                showConfirmButton: true
                            }, function () { goToHome(); });
                            //location.href = _spPageContextInfo.webAbsoluteUrl + "/Pages/Home.aspx";
                            //goToHome();
                            return false;
                        }
                        else if (result == "-1") {

                            //swal({
                            //    title: "Warning",
                            //    text: "Invoice Letter " + $('#invoiceLetterNumber').val() + " is already exists.",
                            //    type: "warning",
                            //    showCancelButton: false,
                            //    showConfirmButton: true
                            //});
                            //var thisCtrl = $('#invoiceLetterNumber');
                            $.unblockUI();
                            swal({
                                title: "Invalid Input",
                                text: "Invoice Letter " + $('#invoiceLetterNumber').val() + " is already exists.",
                                type: "warning",
                                showCancelButton: false,
                                confirmButtonClass: "btn-danger",
                                confirmButtonText: "OK"
                            },
                                function () {
                                    setTimeout(() => $('#invoiceLetterNumber').focus(), 100);
                                });
                            return false;
                        }
                        else if (result == "-2") {
                            $.unblockUI();
                            swal({
                                title: "Warning",
                                text: "Today is gazetted holiday. Please save invoice to process on coming working day...!",
                                type: "warning",
                                showCancelButton: false,
                                showConfirmButton: true,
                                confirmButtonText: "OK"
                            });
                            return false;

                        }
                        else if (result == "-3") {
                            $.unblockUI();
                            swal({
                                title: "Warning",
                                text: "Invoices can only be submitted in working hours...!",
                                type: "warning",
                                showCancelButton: false,
                                showConfirmButton: true,
                                confirmButtonText: "OK"
                            });
                            return false;
                        }
                        else if (result == "-101") {
                            $.unblockUI();
                            swal({
                                title: "Warning",
                                text: "Please submit parent invoice first...!",
                                type: "warning",
                                showCancelButton: false,
                                showConfirmButton: true,
                                confirmButtonText: "OK"
                            });
                            return false;
                        }

                        else {
                            $.unblockUI();
                            swal({
                                title: "Error!",
                                text: result,
                                type: "warning"
                            });

                        }

                    };
                    choice.error = function (err) {
                        console.log(err.statusText);
                    };
                    $.ajax(choice);

                }//END OF IF CREATE

                else {

                    if (value == "Submitted" && $('.files').length == 0) {
                        swal({
                            title: "Error",
                            text: "At least one file must be attached to submit invoice..!",
                            type: "warning"
                        });
                        return false;
                    }
                    myForm = $('#btnSave').attr('tg') + '½';
                    myForm += $('#powerProducer').val() + '½' + $('#producerSite').val() + '½' + $('#status').val() + '½' + $('#invoiceType').val() + '½' + $('#invoiceDueDate').val() + '½' + $('#invoiceLetterNumber').val() + '½' + $('#parentInvoice').val() + '½' + $('#invoiceDate').val() + '½' + $('#invoicePeriodFrom').val() + '½' + $('#invoicePeriodFromTime').val() + '½' + $('#invoicePeriodTo').val() + '½' + $('#invoicePeriodToTime').val() + '½' + $('#currency').val() + '½' + $('#totalClaim').val() + '½' + $('#remarks').val() + '½';
                    myForm += value + '½' + $('#prevTxtAreaRemarks').val();

                    blockData = '';
                    blockDataNew = '';
                    $('#tbl_monthly_epp tbody tr').each(function () {

                        var $tr = $(this);
                        var r = $tr.attr('r');
                        var id = $(this).attr('blockid');

                        if (r == id) {
                            blockData += $(this).attr('blockid') + '½' + $(this).attr('bisrequired') + '½';
                            $tr.find('.clsblk').each(function (i, j) {
                                blockData += $(this).val() + '½';
                            });
                            blockData += '¼';
                            blockData = blockData.replace('½¼', '¡');



                            $('#tbl_monthly_cmp_tech > tbody > tr[blockid="' + id + '"][r="' + r + '"]').each(function (i, j) {
                                var $tr = $(this);
                                blockData += $(this).attr('comptype') + '½' + $(this).attr('compheaderid') + '½' + $(this).attr('compidppa') + '½';
                                $tr.find('.clstech').each(function (a, b) {
                                    blockData += $(this).val() + '½';
                                });
                                blockData += $tr.find('.txtClaimTech').attr('includeindiarytotal') + '½';
                                blockData += $tr.find('.txtClaimTech').attr('ismandatory') + '½';
                                blockData += '¼';
                                blockData = blockData.replace('½¼', '¡');
                            });
                            blockData += '¼';
                            blockData = blockData.replace('¡¼', '¡');
                            blockData = blockData.replace('¡¼', '¡');

                            $('#tbl_monthly_cmp_fin > tbody > tr[blockid="' + id + '"][r="' + r + '"]').each(function (i, j) {
                                var $tr = $(this);
                                blockData += $(this).attr('comptype') + '½' + $(this).attr('compheaderid') + '½' + $(this).attr('compidppa') + '½';
                                $tr.find('.clsfin').each(function (c, d) {
                                    blockData += $(this).val() + '½';
                                });
                                blockData += $tr.find('.txtClaimFin').attr('includeindiarytotal') + '½';
                                blockData += $tr.find('.txtClaimFin').attr('ismandatory') + '½½';
                                blockData += '¼';
                                blockData = blockData.replace('½¼', '¡');
                                blockData = blockData.replace('¡¼', '¡');
                            });
                            blockData += '¼';
                            blockData = blockData.replace('¡¼', '»');
                        }//end of if
                        else {
                            blockDataNew += $(this).attr('blockid') + '½' + $(this).attr('bisrequired') + '½';
                            $tr.find('.clsblk').each(function (i, j) {
                                blockDataNew += $(this).val() + '½';
                            });
                            blockDataNew += '¼';
                            blockDataNew = blockDataNew.replace('½¼', '¡');



                            $('#tbl_monthly_cmp_tech > tbody > tr[blockid="' + id + '"][r="' + r + '"]').each(function (i, j) {
                                var $tr = $(this);
                                blockDataNew += $(this).attr('comptype') + '½' + $(this).attr('compheaderid') + '½' + $(this).attr('compidppa') + '½';
                                $tr.find('.clstech').each(function (a, b) {
                                    blockDataNew += $(this).val() + '½';
                                });
                                blockDataNew += $tr.find('.txtClaimTech').attr('includeindiarytotal') + '½';
                                blockDataNew += $tr.find('.txtClaimTech').attr('ismandatory') + '½';
                                blockDataNew += '¼';
                                blockDataNew = blockDataNew.replace('½¼', '¡');
                            });
                            blockDataNew += '¼';
                            blockDataNew = blockDataNew.replace('¡¼', '¡');
                            blockDataNew = blockDataNew.replace('¡¼', '¡');

                            $('#tbl_monthly_cmp_fin > tbody > tr[blockid="' + id + '"][r="' + r + '"]').each(function (i, j) {
                                var $tr = $(this);
                                blockDataNew += $(this).attr('comptype') + '½' + $(this).attr('compheaderid') + '½' + $(this).attr('compidppa') + '½';
                                $tr.find('.clsfin').each(function (c, d) {
                                    blockDataNew += $(this).val() + '½';
                                });
                                blockDataNew += $tr.find('.txtClaimFin').attr('includeindiarytotal') + '½';
                                blockDataNew += $tr.find('.txtClaimFin').attr('ismandatory') + '½½';
                                blockDataNew += '¼';
                                blockDataNew = blockDataNew.replace('½¼', '¡');
                                blockDataNew = blockDataNew.replace('¡¼', '¡');
                            });
                            blockDataNew += '¼';
                            blockDataNew = blockDataNew.replace('¡¼', '»');
                        }//end of else

                    });
                    if (blockData.endsWith('»')) {
                        blockData += '¼';
                        blockData = blockData.replace('»¼', '');
                    }
                    if (blockDataNew.endsWith('»')) {
                        blockDataNew += '¼';
                        blockDataNew = blockDataNew.replace('»¼', '');
                    }


                    filekData = '';
                    $('.files[fileid="0"]').each(function (iii, jjj) {
                        // element == this
                        filekData += $(this).attr('fext') + '½' + $(this).attr('ftype') + '½' + $(this).attr('fname') + '½' + $(this).attr('ftitle') + '½' + $(this).attr('fdescription') + '½' + $(this).attr('base64') + '¡';
                    });
                    if (filekData.endsWith('¡')) {
                        filekData += '¼';
                        filekData = filekData.replace('¡¼', '');
                    }


                    var fileDelData = "";
                    //if ($('#ulFileList').attr('dellist') != "") {
                    if ($('#tbl_attach').attr('dellist') != "") {
                        fileDelData = '¼' + $('#tbl_attach').attr('dellist');//$('#ulFileList').attr('dellist');
                        fileDelData = fileDelData.replace(/¼½/g, '');
                    }



                    var dellblock = $('#tbl_monthly_epp').attr('dellblock');


                    fileupdate = '';
                    $('.files[fileupdate="fileupdate"]').each(function (iii, jjj) {
                        // element == this
                        fileupdate += $(this).attr('fileid') + '½' + $(this).attr('ftitle') + '½' + $(this).attr('fdescription') + '¡';
                    });
                    if (fileupdate.endsWith('¡')) {
                        fileupdate += '¼';
                        fileupdate = fileupdate.replace('¡¼', '');
                    }

                    var adjData = '';
                    $('#tblADJ tbody tr').each(function (index, element) {
                        var $tr = $(this);
                        adjData += $tr.attr('aid') + "½" + $($tr.find('td')[0]).html() + "½" + $($tr.find('td')[1]).html() + "½" + $($tr.find('td')[2]).html() + "½" + $($tr.find('td')[3]).html() + "¼";
                    });
                    if (adjData.endsWith("¼")) {
                        adjData += "¡";
                        adjData = adjData.replace('¼¡', '');
                    }

                    fromdata.append("strFormData", myForm);
                    fromdata.append("strBlockData", blockData);
                    fromdata.append("strblockDataNew", blockDataNew);
                    fromdata.append("strfilekData", filekData);
                    fromdata.append("strfileDelData", fileDelData);
                    fromdata.append("strdellblock", dellblock);
                    fromdata.append("strfileupdate", fileupdate);
                    fromdata.append("stradjData", adjData);
                    fromdata.append("stradjDelData", $('#tblADJ').attr('adjdellist'));

                    //choice.url = "https://cppa2.azurewebsites.net/v1/invoice/UpdateInvoice?strFormData=0&strBlockData=0";
                    choice.url = "/Invoice/UpdateInvoice" + $(location).attr("search");
                    choice.type = "POST";
                    choice.data = fromdata;
                    //choice.headers = { "Token": Token };
                    choice.contentType = false;
                    choice.processData = false;
                    choice.beforeSend = function () {
                        $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                    };
                    choice.complete = function () {
                        $.unblockUI();
                    };
                    choice.success = function (result) {
                        debugger;
                        if (result == "0") {
                            value = "saved";
                            swal({
                                title: "Invoice!",
                                text: "Invoice has been " + value.toLowerCase() + " successfully.",
                                type: "success",
                                showCancelButton: false,
                                showConfirmButton: true
                            }, function () { goToHome(); });
                            //location.href = _spPageContextInfo.webAbsoluteUrl + "/Pages/Home.aspx";
                            return false;
                        }


                        else if (parseInt(result) > 0) {

                            swal({
                                title: "Invoice!",
                                text: "Invoice with transaction no " + result + " has been " + value.toLowerCase() + " successfully.",
                                type: "success",
                                showCancelButton: false,
                                showConfirmButton: true

                            }, function () { goToHome(); });
                            //location.href = _spPageContextInfo.webAbsoluteUrl + "/Pages/Home.aspx";
                            //goToHome();
                            return false;
                        }
                        else if (result == "-1") {

                            //swal({
                            //    title: "Warning",
                            //    text: "Invoice Letter " + $('#invoiceLetterNumber').val() + " is already exists.",
                            //    type: "warning",
                            //    showCancelButton: false,
                            //    showConfirmButton: true
                            //});
                            //var thisCtrl = $('#invoiceLetterNumber');
                            $.unblockUI();
                            swal({
                                title: "Invalid Input",
                                text: "Invoice Letter " + $('#invoiceLetterNumber').val() + " is already exists.",
                                type: "warning",
                                showCancelButton: false,
                                confirmButtonClass: "btn-danger",
                                confirmButtonText: "OK"
                            },
                                function () {
                                    setTimeout(() => $('#invoiceLetterNumber').focus(), 100);
                                });
                            return false;
                        }
                        else if (result == "-101") {
                            swal({
                                title: "Warning",
                                text: "Please submit parent invoice first...!",
                                type: "warning",
                                showCancelButton: false,
                                showConfirmButton: true
                            });
                        }

                        else if (result == "-3") {
                            $.unblockUI();
                            swal({
                                title: "Warning",
                                text: "Invoices can only be submitted in working hours...!",
                                type: "warning",
                                showCancelButton: false,
                                showConfirmButton: true,
                                confirmButtonText: "OK"
                            });
                            return false;
                        }
                        else {
                            swal({
                                title: "Error!",
                                text: result,
                                type: "warning"
                            });
                        }

                    };
                    choice.error = function (err) {
                        console.log(err.statusText);
                    };


                    //console.log(myForm);
                    //console.log(blockData);
                    //console.log(blockDataNew);
                    //console.log(filekData);
                    //console.log(fileDelData);
                    //console.log(dellblock);
                    $.ajax(choice);

                }//END OF ELSE

            }//END OF FUNCTION 	callAjax(
            $('body').off('click', '.btnEdit');
            $('body').on('click', '.btnEdit', function (e) {
                e.preventDefault();
                $('#btnAddAdjustment, .clsAJDEdit, .clsAJDDelete').show();
                $('#viewonly, #finSum, #fuelWiseSummary').hide();
                $('#edit').show();
                $('#tblHeaderV').hide();

                $('#tblHeader,#rmxDisplay').show();
                $('#tblHeader,#rmxDisplayNew').show();
                $('.clsDispDiv').hide();
                $('.clstdEdit, .clstdDelete').show();
                $('#btnClear').parent().parent().show();
                $('#btnClear').parent().hide();
                $('#monthlyMode').html('Edit');
                $('#btnAddFiles, .btn-blk-delete, .filedelete, #btnAddRow').show();
                $('#addblockrow').parent().show();
                $('#prevTxtAreaRemarks').parent().show();
                $('.dynDiv').remove();
                $('.txtClaimFin, .txtBlockRemarks, .dtfrom, .dtToDate, .txtGSTFin, .txtClaimTech, .txtCompFinRemarks').prop('disabled', false);
                $('#prevTxtAreaRemarks').parent().css('min-width', '42%');

            });
            function showBtns(data) {

                var msg = '';
                if (data.UserDtl.utyp == "2") {
                    if (data.DHIHDR.IS_APPROVED_BY_FINANCE == null) {
                        msg = '<div style="padding-bottom: 15px;">Finance Scrutiny Status : In Process</div>';
                    }
                    if (data.DHIHDR.IS_APPROVED_BY_FINANCE == "0") {
                        msg = '<div style="padding-bottom: 15px;">Finance Scrutiny Status : Returned</div>';
                    }
                    if (data.DHIHDR.IS_APPROVED_BY_FINANCE == "1") {
                        msg = '<div style="padding-bottom: 15px;">Finance Scrutiny Status : Received</div>';
                    }
                }
                if (data.UserDtl.utyp == "3") {
                    if (data.DHIHDR.IS_APPROVED_BY_TECHNICAL == null) {
                        msg = '<div style="padding-bottom: 15px;">Technical Scrutiny Status : In Process</div>';
                    }
                    if (data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "0") {
                        msg = '<div style="padding-bottom: 15px;">Technical Scrutiny Status : Returned</div>';
                    }
                    if (data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "1") {
                        msg = '<div style="padding-bottom: 15px;">Technical Scrutiny Status : Received</div>';
                    }
                }
                $('#btnClear').parent().parent().hide();
                $('#btnAddFiles, .btn-blk-delete, .filedelete, #btnAddRow').hide();
                $('#addblockrow').parent().hide();
                $('#prevTxtAreaRemarks').parent().css('min-width', '42%');
                //            $('#rmxDisplay').parent().parent().append('<div class="dynDiv" style="width:100%;padding-top: 35px;text-align: right;">' + msg +'\
                //                                <button type="button" tg="Received" style="margin-right: 20px;" class="btn btn-success btn-anim clsAction" id="btnAccept" uid="'+ data.UserDtl.uid + '" utyp="' + data.UserDtl.utyp + '" uname="' + data.UserDtl.Name + '"  dhiid="' + data.DHIHDR.DIARY_HEADER_ID + '">\
                //                                        Receive Invoice\
                //                                    </button >\
                //<button type="button" tg="Returned" style="margin-right: 20px;" class="btn btn-danger  btn-anim clsAction" id="btnReject" uid="'+ data.UserDtl.uid + '" utyp="' + data.UserDtl.utyp + '" uname="' + data.UserDtl.Name + '" dhiid="' + data.DHIHDR.DIARY_HEADER_ID + '">\
                //Return to Power Producer\
                //                                    </button > <a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');
                $('#rmxDisplayNew').parent().parent().append('<div class="dynDiv" style="width:100%;padding-top: 35px;text-align: right;">' + msg + '\
                                        <button type="button" tg="Received" style="margin-right: 20px;" class="btn btn-success btn-anim clsAction" id="btnAccept" uid="'+ data.UserDtl.uid + '" utyp="' + data.UserDtl.utyp + '" uname="' + data.UserDtl.Name + '"  dhiid="' + data.DHIHDR.DIARY_HEADER_ID + '">\
                                                Receive Invoice\
                                            </button >\
<button type="button" tg="Returned" style="margin-right: 20px;" class="btn btn-danger  btn-anim clsAction" id="btnReject" uid="'+ data.UserDtl.uid + '" utyp="' + data.UserDtl.utyp + '" uname="' + data.UserDtl.Name + '" dhiid="' + data.DHIHDR.DIARY_HEADER_ID + '">\
Return to Power Producer\
                                            </button > <a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');

            }
            function TechnicalHide() {
                $('#btnClear').parent().parent().hide();
                $('#btnAddFiles, .btn-blk-delete, .filedelete, #btnAddRow').hide();
                $('#addblockrow').parent().hide();
                $('#prevTxtAreaRemarks').parent().hide();
                //$('#rmxDisplay').parent().parent().append('<div style="width:100%;padding-top: 35px;text-align: right;"><a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');
                $('#rmxDisplayNew').parent().parent().append('<div style="width:100%;padding-top: 35px;text-align: right;"><a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');
            }

            $('body').off('click', '.clsAction');
            $('body').on('click', '.clsAction', function (e) {
                var $val = $(this).attr('tg');
                var $id = $(this).attr('dhiid');
                debugger;
                var monClaim = $('#totalClaim').val().replace(/,/g, '');
                if ($val == "Received") {

                    ComClaim = ComClaim.toFixed(4);
                    blkClaim = blkClaim.toFixed(4);

                    ComClaim = parseFloat(ComClaim);
                    blkClaim = parseFloat(blkClaim);

                    if (parseFloat(blkClaim) != parseFloat(monClaim)) {
                        swal({
                            title: "Error",
                            text: "Total Claim amount is not equal to Sum of Component Claim...!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                        });

                        return false;
                    }

                    if (blkClaim != ComClaim) {
                        swal({
                            title: "Error",
                            text: "Financial Claim Sum is not equal to Sum of Block Claim...!",
                            type: "warning",
                            showCancelButton: false,
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK"
                        });

                        return false;
                    }


                }


                if ($val != "Returned") {
                    if (($('#hardCopySub').val() == "" || $('#hardCopySubTime').val() == "" || $('#hardCopySubTime').val() == null) && currentUserType == 3) {
                        swal({
                            title: "Error",
                            text: "Please select invoice receiving date and time!",
                            type: "warning",
                            confirmButtonClass: "btn btn-danger",
                            confirmButtonText: "OK",
                            showCancelButton: false
                            //,onAfterClose: () => {
                            //    setTimeout(() => $('#hardCopySub').focus(), 100)
                            //}
                        }, function () { setTimeout(() => $('#hardCopySub').focus(), 100); });
                        return false;
                    }
                }
                if ($val == "Returned" && $('#prevTxtAreaRemarks').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please enter notes!",
                        type: "warning",
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK",
                        showCancelButton: false
                        //,onAfterClose: () => {
                        //    setTimeout(() => $('#prevTxtAreaRemarks').focus(), 100)
                        //}
                    }, function () { setTimeout(() => $('#prevTxtAreaRemarks').focus(), 100); });
                    return false;
                }

                swal({
                    title: "Are you sure?",
                    text: "",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn btn-danger",
                    confirmButtonText: "Yes, Continue",
                    cancelButtonText: "No, cancel"
                },
                    function () {
                        e.preventDefault();
                        var $myForm = $id + "½" + $val + "½" + $('#prevTxtAreaRemarks').val() + '½' + $('#hardCopySub').val() + '½' + $('#hardCopySubTime').val() + '½' + $('#hardCopyType').val();

                        var fromdata = new FormData();
                        fromdata.append("strFormData", $myForm);
                        var choice = {};
                        // choice.url = "https://cppa2.azurewebsites.net/v1/invoice/UpdateRemarks";
                        choice.url = "/Invoice/UpdateRemarks" + $(location).attr("search");
                        choice.type = "POST";
                        choice.data = fromdata;
                        //choice.headers = { "Token": Token };
                        choice.contentType = false;
                        choice.processData = false;
                        choice.beforeSend = function () {
                            $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                        };
                        choice.complete = function () {
                            $.unblockUI();
                        };
                        choice.success = function (result) {

                            const myarray = result.split("½");
                            var abc1 = "0";
                            if (myarray[2] > 30) {
                                abc1 = Math.ceil(Math.round(myarray[2] / 30)).toString();
                            }
                            if (myarray[0] == "1") {
                                swal({
                                    title: "Invoice!",
                                    text: "Invoice has been " + $val + " successfully.",
                                    type: "success",
                                    showCancelButton: false,
                                    showConfirmButton: true,

                                    closeOnConfirm: true
                                },
                                    function () {
                                        if (myarray[1] == "Received") {
                                            debugger;
                                            EcmFileTransfer($id, Vname, VsiteID, abc1);
                                        }
                                        goToHome();
                                    });


                                return false;
                            }
                            else {
                                swal({
                                    title: "Error!",
                                    text: result,
                                    type: "warning"
                                });
                            }

                        };
                        choice.error = function (err) {
                            console.log(err.statusText);
                        };
                        $.ajax(choice);
                        swal("Complete!", "", "success");
                    }
                );

                //    .then((result) => {
                //    if (result.value) {

                //    } else {
                //        swal("Cancelled!", "", "error");
                //    }
                //});

            });// end of save button



            function LoadMonthlyInvoiceByID() {

                var DHI = '', LoadFor = '';
                try {
                    DHI = getParameterByName('diarynumber');
                    LoadFor = getParameterByName('typ');
                    vendorSiteId = getParameterByName('vendorSiteId');
                    if (LoadFor == "V") {
                        $('#tblHeaderV').show();
                        $('#tblHeader').hide();
                        $('#rmxDisplay').show();
                        $('#rmxDisplayNew').show();
                        $('.clsDispDiv').hide();
                        $('#monthlyMode').html('View');
                        $('#viewonly').show();
                        $('#edit').hide();
                    }
                    else if (LoadFor == "E") {
                        $('#monthlyMode').html('Edit');
                        $('.clsDispDiv').hide();
                    }
                    else {
                        $('#monthlyMode').html('Create');
                        $('.clsDispDiv').hide();
                    }
                }
                catch (e) {
                    return false;
                }
                if (DHI == '' || DHI == null) {
                    return false;
                }


                debugger;
                var fromdata = new FormData();
                fromdata.append("vls", '3½' + DHI + '½' + vendorSiteId);
                debugger;
                $.ajax({
                    //type: "GET",
                    //url: "https://cppa2.azurewebsites.net/v1/invoice/GetInvoice/" + DHI,
                    //dataType: 'json',
                    //headers: {
                    //    "Token": Token
                    //},
                    beforeSend: function () {
                        $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                    },
                    complete: function () {
                        $.unblockUI();
                    },
                    type: "POST",
                    url: "/Invoice/AjaxCall" + $(location).attr("search"),
                    data: fromdata,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        debugger;
                        data = $.parseJSON(data);
                        debugger;
                        tempDHI = data.DHIHDR.DIARY_HEADER_ID;
                        Vname = data.DHIHDR.VENDOR_NAME;
                        VsiteID = data.DHIHDR.ORGANIZATION_ID;
                        vendorID = data.DHIHDR.VENDOR_ID;
                        // var T_Number = data.DHIHDR.TransactionNumber;
                        blocksData = data.blklist;
                        if (data.DTL.length > 0) {
                            var blkData = data.DTL;
                            if (LoadFor == "V") {
                                var techCompts;
                                $('#techSum > tbody').html('');
                                var comps;
                                if (blkData.length == 1) {
                                    comps = $.parseJSON(blkData[0].COMPONENTS);
                                    techCompts = $.grep(comps, function (v) {
                                        return v.IS_INCLUDE_IN_TOTAL == "N";
                                    });
                                    if (techCompts.length > 1) {
                                        $('#techSum').show();
                                        var $value;
                                        $.each(techCompts, function (i, j) {
                                            //if (techArray[x]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT != 'Factor' && !(techArray[x]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT).match(/Rs.*/)) {
                                            // if (j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT != 'Factor' && !(j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT).match(/Rs.*/)) {
                                            if (j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT != 'Factor' && j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT != '%' && !(j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT).match(/Rs.*/)) {
                                                $value = j.COMP_VALUE.toString().replace(/,/g, '');
                                                $value = numberWithCommasandMinusSign($value);
                                                $('#techSum > tbody').append('<tr><td><span style="margin-right: 5px;">' + j.COMP_NAME + ": " + '</span></td><td><span style="margin-right: 5px;">' + $value + '</span></td><td><span>' + j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT + '</span></td></tr>');
                                            }
                                        });
                                    }
                                    else {
                                        $('#techSum').hide();
                                    }
                                }
                                else if (blkData.length > 1) {
                                    var techArray = [], total = 0, name = '', unit = '', prevObj, array2;
                                    $('#techSum').show();
                                    $.each(blkData, function (x, y) {
                                        comps = $.parseJSON(y.COMPONENTS);
                                        if (comps != null) {
                                            techCompts = $.grep(comps, function (v) {
                                                return v.IS_INCLUDE_IN_TOTAL == "N";
                                            });
                                            $.each(techCompts, function (x, y) {
                                                techArray.push(y);
                                            });
                                        }
                                    });

                                    if (techArray.length > 0) {
                                        prevObj = '';
                                        techArray.sort(function (a, b) {
                                            return a.COMP_NAME.toLowerCase().localeCompare(b.COMP_NAME.toLowerCase());
                                        });
                                        array2 = techArray
                                        for (var x = 0; x < techArray.length; x++) {
                                            if ((techArray[x]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT != 'Factor' && !(techArray[x]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT).match(/Rs.*/)) || (techArray[x]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT != '%' && !(techArray[x]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT).match(/Rs.*/))) {
                                                if (techArray[x].COMP_NAME != prevObj) {
                                                    total = 0;
                                                    for (var i = 0; i < array2.length; i++) {
                                                        if (techArray[x].COMP_NAME == array2[i].COMP_NAME) {
                                                            name = array2[i].COMP_NAME;
                                                            unit = array2[i]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT;
                                                            total += array2[i].COMP_VALUE;
                                                        }
                                                    }
                                                    total = total.toString().replace(/,/g, '');
                                                    total = numberWithCommasandMinusSign(total);
                                                    $('#techSum > tbody').append('<tr><td><span style="margin-right: 5px;">' + name + ": " + '</span></td><td><span style="margin-right: 5px;">' + total + '</span></td><td><span>' + unit + '</span></td></tr>');
                                                    //$('#techSum').append('<li><span style="margin-right: 5px;">Total</span><span style="margin-right: 5px;">' + name + ": " + '</span><span style="margin-right: 5px;">' + total + '</span><span>' + unit + '</span></li>');
                                                    prevObj = techArray[x].COMP_NAME;
                                                }
                                            }
                                        }
                                    }
                                }
                                else {
                                    $('#techSum').hide();
                                }

                                var finCompts;
                                $('#finSum > tbody').html('');
                                var comps;
                                if (blkData.length == 1) {
                                    comps = $.parseJSON(blkData[0].COMPONENTS);
                                    finCompts = $.grep(comps, function (v) {
                                        return v.IS_INCLUDE_IN_TOTAL == "Y";
                                    });
                                    if (finCompts.length > 1) {
                                        $('#finSum').show();
                                        var $value;
                                        $.each(finCompts, function (i, j) {
                                            if (j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT == 'Rs.') {
                                                $value = j.COMP_VALUE.toString().replace(/,/g, '');
                                                $value = numberWithCommasandMinusSign($value);
                                                $('#finSum > tbody').append('<tr><td><span style="margin-right: 5px;">' + j.COMP_NAME + ": " + '</span></td><td><span style="margin-right: 5px;">' + j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT + '</span></td><td><span>' + $value + '</span></td></tr>');
                                                //$('#finSum').append('<li><span style="margin-right: 5px;">Total</span><span style="margin-right: 5px;">' + j.COMP_NAME + ": " + '</span><span style="margin-right: 5px;">' + $value + '</span><span>' + j['CPPA_CA.PPA_COMP_DEFS'][0].UNIT + '</span></li>');
                                            }
                                        });
                                    }
                                    else {
                                        $('#finSum').hide();
                                    }
                                }
                                else if (blkData.length > 1) {
                                    var finArray = [], total = 0, name = '', unit = '', prevObj, array2;
                                    $('#finSum').show();
                                    $.each(blkData, function (x, y) {
                                        comps = $.parseJSON(y.COMPONENTS);
                                        if (comps != null) {
                                            finCompts = $.grep(comps, function (v) {
                                                return v.IS_INCLUDE_IN_TOTAL == "Y";
                                            });
                                            $.each(finCompts, function (x, y) {
                                                finArray.push(y);
                                            });
                                        }
                                    });
                                    if (finArray.length > 0) {
                                        prevObj = '';
                                        finArray.sort(function (a, b) {
                                            return a.COMP_NAME.toLowerCase().localeCompare(b.COMP_NAME.toLowerCase());
                                        });
                                        array2 = finArray
                                        for (var x = 0; x < finArray.length; x++) {
                                            if (finArray[x]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT == 'Rs.') {
                                                if (finArray[x].COMP_NAME != prevObj) {
                                                    total = 0;
                                                    for (var i = 0; i < array2.length; i++) {
                                                        if (finArray[x].COMP_NAME == array2[i].COMP_NAME) {
                                                            name = array2[i].COMP_NAME;
                                                            unit = array2[i]['CPPA_CA.PPA_COMP_DEFS'][0].UNIT;
                                                            total += array2[i].COMP_VALUE;
                                                        }
                                                    }
                                                    total = total.toString().replace(/,/g, '');
                                                    total = numberWithCommasandMinusSign(total);
                                                    $('#finSum > tbody').append('<tr><td><span style="margin-right: 5px;">' + name + ": " + '</span></td><td><span style="margin-right: 5px;">' + unit + '</span></td><td><span>' + total + '</span></td></tr>');
                                                    //$('#finSum').append('<li><span style="margin-right: 5px;">Total</span><span style="margin-right: 5px;">' + name + ": " + '</span><span style="margin-right: 5px;">' + total + '</span><span>' + unit + '</span></li>');
                                                    prevObj = finArray[x].COMP_NAME;
                                                }
                                            }
                                        }
                                    }
                                }
                                else {
                                    $('#finSum').hide();
                                }

                                $('#fuelWiseSummary > tbody').html('');
                                if (data.FuelSummary != "") {
                                    var fuelSummary = JSON.parse(data.FuelSummary);
                                    $('#fuelWiseSummary').show();
                                    $.each(fuelSummary, function (i, j) {
                                        if (j.UNIT == 'Rs.' || j.UNIT.toUpperCase() == 'KWH') {
                                            $('#fuelWiseSummary > tbody').append('<tr><td><span style="margin-right: 5px;">' + j.FUEL_TYPE + '</span></td><td><span style="margin-right: 5px;">' + j.COMP_NAME + '</span></td><td><span>' + j.UNIT + '</span></td><td><span>' + numberWithCommasandMinusSign(j.COMP_VALUE) + '</span></td></tr>');
                                        }
                                    });
                                }
                                else {
                                    $('#fuelWiseSummary').hide();
                                }
                            }
                        }
                        $('#ddlAddBlock').html('</option><option value="0">Select</option>');
                        $.each(blocksData, function (iii, jjj) {
                            $('#ddlAddBlock').append('<option value="' + jjj.BLK_FUEL_ID_PK + '">' + jjj.BLOCK_NO + ' ( ' + jjj.FUEL_TYPE + ' )');
                        });
                        //$("#diarynumber").html(data.DHIHDR.TransactionNumber);
                        $("#powerProducer").val(data.DHIHDR.VENDOR_NEW_NAME);
                        $("#powerProducerV").html(data.DHIHDR.VENDOR_NAME);
                        $("#producerSite").html('<option selected hid="' + data.DHIHDR.PPA_HEADER_ID + '" value="' + data.DHIHDR.ORGANIZATION_ID + '">' + data.DHIHDR.ADDRESS_LINE1 + '</option>');
                        // $("#producerSite").html('<option selected value="' + data.DHIHDR.ORGANIZATION_ID + '">' + data.DHIHDR.ADDRESS_LINE1 + '</option>');
                        $("#producerSiteV").html(data.DHIHDR.ADDRESS_LINE1);
                        $("#submitDate").val(data.DHIHDR.SUBMIT_DATE);
                        $("#creationdate").html(data.DHIHDR.CREATION_DATE);
                        if (data.DHIHDR.TransactionNumber == "0") {
                            $("#diarynumberV").html('');
                        }
                        else {
                            $("#diarynumberV").html(data.DHIHDR.TransactionNumber);
                        }
                        $("#hardCopySub").val(data.DHIHDR.HARD_COPY_SUBMISSION_DATE);
                        $("#hardCopySubTime").val(data.DHIHDR.HARD_COPY_SUBMISSION_TIME);
                        $("#hardCopyType").val(data.DHIHDR.HARD_COPY_SUBMISSION_TYPE);


                        var colorCode = '';
                        if (data.DHIHDR.APPROVED_STATUS == 'Received') {
                            colorCode = 'green';
                        }
                        else if (data.DHIHDR.APPROVED_STATUS == 'Submitted') {
                            colorCode = 'orange';
                        }
                        else if (data.DHIHDR.APPROVED_STATUS == 'Returned') {
                            colorCode = 'red';
                        }
                        else if (data.DHIHDR.APPROVED_STATUS == "Draft")
                            colorCode = 'black';
                        else if (data.DHIHDR.APPROVED_STATUS == "Withdraw")
                            colorCode = 'gray';
                        else
                            colorCode = '#0095eb';


                        $("#creationdateV").html(data.DHIHDR.CREATION_DATE);
                        $("#submitDateV").html(data.DHIHDR.SUBMIT_DATE);
                        $("#status").val(data.DHIHDR.APPROVED_STATUS);
                        $("#statusV").html(data.DHIHDR.APPROVED_STATUS).css('color', colorCode);
                        $("#invoiceType").html('<option selected adjustments="' + data.DHIHDR.ADJUSTMENTS + '" tg="' + data.DHIHDR.IS_HOURLY + '" value="' + data.DHIHDR.INVOICE_TYPE_ID + '">' + data.DHIHDR.INVOICE_TYPES + '</option>');
                        $("#invoiceTypeV").html(data.DHIHDR.INVOICE_TYPES);
                        if (data.DHIHDR.IS_HOURLY == "N") {
                            $('#invoicePeriodFromTime').val('00:00').attr('disabled', 'disabled');
                            $('#invoicePeriodToTime').val('00:00').attr('disabled', 'disabled');
                        }
                        if (data.DHIHDR.ADJUSTMENTS == "Y") {
                            $('#dvAdjustment').show();
                        }
                        loadAdjInvDll();
                        $("#invoiceDueDate").val(data.DHIHDR.INV_DUE_DATE);
                        $("#invoiceDueDateV").html(data.DHIHDR.INV_DUE_DATE);
                        $("#invoiceLetterNumber").val(data.DHIHDR.VEN_INV_LETTER_NO);
                        //$("#invoiceLetterNumber").prop("disabled", true);
                        $("#invoiceLetterNumberV").html(data.DHIHDR.VEN_INV_LETTER_NO);
                        $("#remarks").val(data.DHIHDR.REMARKS);
                        $("#remarksV").html(data.DHIHDR.REMARKS);
                        $("#invoiceDate").val(data.DHIHDR.VEN_INV_LETTER_DATE);
                        $("#invoiceDateV").html(data.DHIHDR.VEN_INV_LETTER_DATE);
                        if (data.DHIHDR.INVOICE_TYPES == "General Sales Tax" || data.DHIHDR.INVOICE_TYPES == "Pre COD GST Payment") {
                            LoadParentInvoice(data.DHIHDR.PARENT_INVOICE_NO, data.DHIHDR.ORGANIZATION_ID);
                        }

                        else if (data.DHIHDR.INVOICE_TYPES == "GST on Commodity Charge") {
                            
                            LoadParentInvoiceGSTComodity(data.DHIHDR.PARENT_INVOICE_NO, data.DHIHDR.ORGANIZATION_ID);
                        }
                        else {
                            $("#parentInvoice").val('0');
                            $("#parentInvoice").attr('disabled', 'disabled');
                            $("#parentInvoiceV").val('');
                        }



                        $("#invoicePeriodFrom").val(data.DHIHDR.INVOICE_PERIOD_FROM);
                        $("#invoicePeriodFromV").html(data.DHIHDR.INVOICE_PERIOD_FROM + ' ' + data.DHIHDR.INVOICE_PERIOD_FROMTIME);

                        $("#invoicePeriodTo").val(data.DHIHDR.INVOICE_PERIOD_TO);
                        $("#invoicePeriodToV").html(data.DHIHDR.INVOICE_PERIOD_TO + ' ' + data.DHIHDR.INVOICE_PERIOD_TOTIME);

                        $("#invoicePeriodFromTime").val(data.DHIHDR.INVOICE_PERIOD_FROMTIME);
                        $("#invoicePeriodToTime").val(data.DHIHDR.INVOICE_PERIOD_TOTIME);

                        $("#currency").val(data.DHIHDR.CURRENCY);
                        $("#currencyV").html(data.DHIHDR.CURRENCY);


                        $("#totalClaim").val(data.DHIHDR.TOTAL_CLAIM);
                        $("#totalClaimV").html(data.DHIHDR.TOTAL_CLAIM);
                        if (data.DHIHDR.FINANCE_UPDATE_DATE == '') {
                            $('#VreceiveDateTtitle, #VreceiveDateValue').html('');
                        }
                        else {
                            $('#VreceiveDateTtitle').html('<label for="totalClaim">Received Date</label>');
                            $('#VreceiveDateValue').html('<span>' + data.DHIHDR.FINANCE_UPDATE_DATE + '</span>');
                        }
                        var hideable = 'style="display:none;"';
                        isAdvance = data.DHIHDR.ADVANCE_PAYMENT;
                        if (data.DHIHDR.ADVANCE_PAYMENT == 'Y') {
                            hideable = '';
                        }
                        else {
                            hideable = 'style="display:none;"';
                        }

                        $('#tbl_monthly_epp').html('<thead id="theaddynamic"><tr><th>Select</th>   <th style="width: 10%;">Block / Complex </th>    <th style="width: 10%;">Fuel Type </th>      <th style="width: 10%;">Rate Valid From </th>    <th style="width: 10%;">Rate Valid To </th>    <th>Claim Total (Current Month) </th>  <th id="advTAP" ' + hideable + '>Adv. Total (Already Verified) </th>    <th id="remCM" ' + hideable + '>Remaining (Current Month) </th>    <th id="advNM" ' + hideable + '>Advance (Next Month) </th>    <th id="payCM" ' + hideable + '>Payable Current Month</th><th>Remarks</th><th></th></tr></thead>');
                        var blockBody = '';
                        $('#tbl_monthly_cmp_fin > tbody').html('');
                        $('#tbl_monthly_cmp_tech > tbody').html('');
                        $('#viewContainer').html('');
                        var vBhead = '<thead><tr><th style="width: 10%;">Block / Complex </th>    <th style="width: 200px;">Fuel Type </th>      <th style="width: 10%;">Rate Valid From </th>    <th style="width: 10%;">Rate Valid To </th>    <th style="width: 200px;">Claim Total (Current Month) </th>  <th id="advTAP" ' + hideable + '>Adv. Total (Already Verified) </th>    <th id="remCM" ' + hideable + '>Remaining (Current Month) </th>    <th id="advNM" ' + hideable + '>Advance (Next Month) </th>    <th id="payCM" ' + hideable + '>Payable Current Month</th><th>Remarks</th></tr></thead>';
                        var vThead = '<thead><tr><th style="width:200px;">Component Name </th><th style="width:200px;">Units </th><th style="width:200px;">Claim </th><th>Remarks</th></tr></thead>';
                        var vFhead = '<thead><tr><th style="width:200px;">Component Name </th><th style="width:200px;">Units </th><th style="width:200px;">Claim </th><th class="gstHeadV" style="width:200px;">GST % *</th><th>Remarks</th></tr></thead>';
                        $.each(data.DTL, function (i, j) {
                            if (currentUserType == 2 || currentUserType == 3) {

                                if (hideable == 'style="display:none;"') {

                                    blkClaim = +(blkClaim + j.CLAIM_TOTAL);
                                    // blkClaim += j.CLAIM_TOTAL;
                                }
                                else {
                                    blkClaim = +(blkClaim + j.PAYABLE_CURRENT_MONTH);
                                }
                                blkClaim = parseFloat(blkClaim);
                            }//usercheck end

                            var req = 'style="display:none;"';
                            if (j.bisRequired == "1") {
                                req = '';
                            }

                            blockBody += '<tr ' + req + ' bisrequired="1" r="' + j.BLK_FUEL_ID_PK + '" blockid="' + j.BLK_FUEL_ID_PK + '"><td><span class="radio radio-info"><input type="radio" name="blkRd" class="rd-blk" blockid="' + j.BLK_FUEL_ID_PK + '" r="' + j.BLK_FUEL_ID_PK + '"></span></td> <td><input type="text" class="form-control txtBlock clsblk" required="" readonly valueid="' + j.BLK_FUEL_ID_PK + '" value="' + j.BLOCK_NO + '"></td><td><input type="text" class="form-control txtFuelType clsblk" required="" readonly value="' + j.FUEL_TYPE + '"></td> <td><input type="text" class="form-control makeEmpty clsblk dtfrom" value="' + j.RATE_VALID_FROM + '" ratevalid="from" style="width:110px;background-color: rgb(251, 255, 193);" onchange="compdate(this);" readonly></td> <td><input type="text" class="form-control dtToDate makeEmpty clsblk" ratevalid="to" style="width:110px;background-color: rgb(251, 255, 193);" value="' + j.RATE_VALID_TO + '" onchange="compdate(this);" readonly></td> <td><input type="text" readonly class="form-control txtClaimAmount makeZero clsblk" blockid="' + j.BLK_FUEL_ID_PK + '" r="' + j.BLK_FUEL_ID_PK + '" value="' + j.CLAIM_TOTAL + '"></td><td ' + hideable + '><input type="text" class="form-control txtAdv makeZero clsblk" value="' + j.ADVANCE_PAID + '" readonly> </td> <td ' + hideable + '><input type="text" class="form-control txtAdv makeZero clsblk" value="' + j.REMAINING_CURRENT_MONTH + '" readonly> </td><td ' + hideable + '><input type="text" class="form-control txtAdv makeZero clsblk" value="' + j.ADVANCE_NEXT_MONTH + '" readonly> </td> <td ' + hideable + '><input type="text" class="form-control txtAdv makeZero clsblk txtPCM" value="' + j.PAYABLE_CURRENT_MONTH + '" readonly></td> <td><input type="text" class="form-control txtBlockRemarks makeEmpty clsblk" value="' + j.REMARKS + '"></td><td><i class="ti-trash btn-delete btn-block btn-blk-delete" title="Delete" style="text-align: center;line-height: 2;color: black;background: #c6c6c6; color:red;"  blockid="' + j.BLK_FUEL_ID_PK + '" r="' + j.BLK_FUEL_ID_PK + '"> </i></td></tr>';

                            var vBdata = '<tr><td>' + j.BLOCK_NO + '</td>\
                            <td>' + j.FUEL_TYPE + '</td>\
                            <td>' + j.RATE_VALID_FROM + '</td>\
                            <td>' + j.RATE_VALID_TO + '</td>\
                            <td style="text-align: right;" class="comAaa">' + j.CLAIM_TOTAL + '</td>\
                            <td ' + hideable + '>' + numberWithCommas(j.ADVANCE_PAID) + '</td>\
                            <td ' + hideable + '>' + numberWithCommas(j.REMAINING_CURRENT_MONTH) + '</td>\
                            <td ' + hideable + '>' + numberWithCommas(j.ADVANCE_NEXT_MONTH) + '</td>\
                            <td ' + hideable + '>' + numberWithCommas(j.PAYABLE_CURRENT_MONTH) + '</td>\
                            <td>' + j.REMARKS + '</td>\
                            </tr>';
                            var compData = $.parseJSON(j.COMPONENTS);
                            var compTrsTech = '';
                            var compTrsFin = '';
                            var vcompTrsTech = '';
                            var vcompTrsFin = '';
                            var mndcolor = '';
                            if (compData != null) {
                                $.each(compData, function (x, y) {

                                    debugger;
                                    console.log(y.CompName, y.IS_MANDATORY);
                                    if (y.IS_MANDATORY== "Y") {
                                        mndcolor = '#FBFFC1';
                                        //$('.txtClaimFin').css('background-color', 'rgb(251, 255, 193)');
                                    } else {
                                        mndcolor = '';
                                    }
                                    if (((y["CPPA_CA.PPA_COMP_DEFS"][0].UNIT).match(/Rs.*/) && y.IS_INCLUDE_IN_TOTAL == 'N') || ((y["CPPA_CA.PPA_COMP_DEFS"][0].UNIT)=='%' && y.IS_INCLUDE_IN_TOTAL == 'N') || y.IS_INCLUDE_IN_TOTAL == 'Y') {

                                        if ((currentUserType == 2 || currentUserType == 3) && y["CPPA_CA.PPA_COMP_DEFS"][0].INCLUDE_IN_CLAIM_PORTAL == 'YES' ||
                                            (currentUserType == 2 || currentUserType == 3) &&
                                            (y.COMP_NAME == "Advance Next Month" || y.COMP_NAME == "Advance Already Verified")) {
                                            ComClaim += y.COMP_VALUE;
                                        }//05-12-19*/

                                       

                                        compTrsFin += '<tr style="display:none;" r="' + j.BLK_FUEL_ID_PK + '" blockid="' + j.BLK_FUEL_ID_PK + '" compheaderid="' + y.COM_HEADER_ID + '" compidppa="' + y.COM_DEF_ID_FK + '" comptype="fin"><td><input type="text" class="form-control clsfin" readonly="" value="' + y.COMP_NAME + '"></td><td><input type="text" class="form-control clsfin" readonly="" value="' + y["CPPA_CA.PPA_COMP_DEFS"][0].UNIT + '"></td><td><input type="text" class="form-control txtClaimFin clsfin" blockid="' + j.BLK_FUEL_ID_PK + '" includeinclaimportal="' + y['CPPA_CA.PPA_COMP_DEFS'][0].INCLUDE_IN_CLAIM_PORTAL + '" includeindiarytotal="' + y.IS_INCLUDE_IN_TOTAL + '" r="' + j.BLK_FUEL_ID_PK + '" IsMandatory="' + y.IS_MANDATORY+ '" value="' + y.COMP_VALUE + '" style="background-color:' + mndcolor + '"></td><td class="gstTD"><input type="number" min="0" max="100" class="form-control txtGSTFin clsfin" value="' + y.GST_PER + '"></td><td><input type="text" class="form-control txtCompFinRemarks clsfin"  value="' + y.REMARKS + '"></td></tr>';
                                        vcompTrsFin += '<tr><td>' + y.COMP_NAME + '</td>\
                                        <td>' + y["CPPA_CA.PPA_COMP_DEFS"][0].UNIT + '</td>\
                                        <td style="text-align: right;" class="comAaa">' + y.COMP_VALUE + '</td>\
                                        <td style="text-align: right;" class="comAaa gstTD">' + y.GST_PER + '</td>\
                                        <td>' + y.REMARKS + '</td></tr>';
                                    }
                                    else {
                                        compTrsTech += '<tr style="display:none;" blockid="' + j.BLK_FUEL_ID_PK + '" r="' + j.BLK_FUEL_ID_PK + '" compheaderid="' + y.COM_HEADER_ID + '" compidppa="' + y.COM_DEF_ID_FK + '" comptype="tech"><td><input type="text" class="form-control clstech" readonly="" value="' + y.COMP_NAME + '"></td><td><input type="text" class="form-control clstech" readonly="" value="' + y["CPPA_CA.PPA_COMP_DEFS"][0].UNIT + '"></td><td><input type="text" class="form-control txtClaimTech clstech" blockid="' + j.BLK_FUEL_ID_PK + '" includeinclaimportal="' + y['CPPA_CA.PPA_COMP_DEFS'][0].INCLUDE_IN_CLAIM_PORTAL + '" includeindiarytotal="' + y.IS_INCLUDE_IN_TOTAL + '" r="' + j.BLK_FUEL_ID_PK + '" IsMandatory="' + y.IS_MANDATORY + '" value="' + y.COMP_VALUE + '"style="background-color:' + mndcolor +'"></td><td><input type="text" class="form-control txtCompFinRemarks clstech" value="' + y.REMARKS + '"></td></tr>';
                                        vcompTrsTech += '<tr><td>' + y.COMP_NAME + '</td>\
                                        <td>' + y["CPPA_CA.PPA_COMP_DEFS"][0].UNIT + '</td>\
                                        <td style="text-align: right;" class="comAaa">' + y.COMP_VALUE + '</td>\
                                        <td>' + y.REMARKS + '</td></tr>';
                                    }
                                });//end inner loop
                            }
                            $('#tbl_monthly_cmp_fin > tbody').append(compTrsFin);
                            $('#tbl_monthly_cmp_tech > tbody').append(compTrsTech);


                            $('#viewContainer').append('<div>\
                                <table class="table table-bordered">'+ vBhead + '<tbody>' + vBdata + '</tbody></table>\
                                <table class="table table-bordered" style="margin-left: 10%;width:90%;"><caption style="font-size: 13px;font-weight: bold;color:black;">Technical Data</caption>'+ vThead + '<tbody>' + vcompTrsTech + '</tbody></table>\
                                <table class="table table-bordered" style="margin-left: 10%;width:90%;"><caption style="font-size: 13px;font-weight: bold;color:black;">Financial Data</caption>'+ vFhead + '<tbody>' + vcompTrsFin + '</tbody></table>\
                                </div>');
                        });//end of first each

                        //checkBlkRequired();
                        $('#tbl_monthly_epp').append('<tbody>' + blockBody + '</tbody>');
                        $('.comAaa').each(function (index, element) {
                            var $val = $(this).html();
                            $(this).html(numberWithCommasandMinusSign($val));
                        });


                        $('#tblADJ tbody').html('');
                        $.each(data.AdjList, function (a, b) {
                            $('#tblADJ tbody').append('<tr aid="' + b.ADJ_HEADER_ID + '">\
                    <td>'+ b.REFERENCE_INVOICE_NUMBER + '</td>\
                    <td>'+ b.ADJ_TYPES + '</td>\
                    <td>'+ numberWithCommas(b.ADJ_AMOUNT) + '</td>\
                    <td>'+ b.REMARKS + '</td>\
                    <td class="clsAJDEdit"><center><span class="adjedit zmdi zmdi-edit" style="cursor:pointer;color:#0095eb;font-size: 1.5em;"></span></center></td>\
                    <td class="clsAJDDelete"><center><span class="adjdelete zmdi zmdi-delete" style="cursor: pointer; color: red; font-size: 1.5em; display: inline-block;"></span></center></td>\
                    ');
                                            });
                        $('#btnAddAdjustment, .clsAJDEdit, .clsAJDDelete').hide();
                        addComma();
                        if (data.DHIHDR.SubmittionRemarks != null) {
                            try {
                                var rlist = data.DHIHDR.SubmittionRemarks.toString().split("¼");
                                $('#rmxDisplay').html('');
                                $.each(rlist, function (i, j) {
                                    var rmx = j.split("½");
                                    $('#rmxDisplay').append('<div class="remarks-wrap">\
                                    <img class= "remarks-img" src = "/Content/img/user1.png" />\
                                    <div class="remarks-comment" data-owner="'+ rmx[1] + ' ' + rmx[2] + '">\
                                        <p>' + rmx[3] + '</p>\
                                    </div>\
                                            </div >');
                                });
                            } catch (e) {
                                $('#rmxDisplay').html('');
                            }


                        }
                        //var fileButtons = '';
                        $.each(data.FList, function (i, j) {
                            var fileNameExists = fileNames.includes(j.FILE_NAME);
                            if (j.FILE_NAME == '') {
                                $("#DownAll").hide();
                            }
                            else {
                                $("#DownAll").show();
                            }
                            if (!fileNameExists) {
                                fileNames.push(j.FILE_NAME);
                            }
                            else {
                                swal({
                                    title: "Error",
                                    text: "Selected file has already been attached! Please select a different file.",
                                    type: "warning"
                                });
                                return false;
                            }
                            if (j.FILE_LINK != null) {
                                $("#tbl_attach > tbody").append('<tr class="files" fileid="' + j.ATTACH_HEADER_ID + '"  fname="' + j.FILE_LINK + '" ftitle="' + j.ATTACHMENT_TITLE + '" fdescription="' + j.ATTACHMENT_DESC + '"  base64=""><td><span download="' + j.FILE_LINK + '">' + j.ATTACHMENT_TITLE + '</span></td><td><span>' + j.ATTACHMENT_DESC + '</span></td><td><span> <a target="_blank" style ="color:blue;" href="' + j.FILE_LINK + '">' + j.FILE_LINK + '</span></td>\
                                <td class="clstdEdit"><center><span class="fileedit zmdi zmdi-edit" style="cursor:pointer;color:#0095eb;font-size: 1.5em;"></span></center></td>\
                                <td class="clstdDelete"><center><span class="filedelete zmdi zmdi-delete" style="cursor:pointer;color:red;font-size: 1.5em;"></span></center></td>\
                                 <td><center><a target="_blank" style ="color:blue;" href="' + j.FILE_LINK + '">' + '<span class=" zmdi zmdi-format-valign-bottom zmdi-hc-2x" fileid="' + j.ATTACH_HEADER_ID + '" style="cursor: pointer;color:#0095eb;"></span>' + ' </a></center></td></tr>');
                            }
                            else {
                                $("#tbl_attach > tbody").append('<tr class="files" fileid="' + j.ATTACH_HEADER_ID + '"  fname="' + j.FILE_NAME + '" ftitle="' + j.ATTACHMENT_TITLE + '" fdescription="' + j.ATTACHMENT_DESC + '"  base64=""><td><span download="' + j.FILE_NAME + '">' + j.ATTACHMENT_TITLE + '</span></td><td><span>' + j.ATTACHMENT_DESC + '</span></td><td><span>' + j.FILE_NAME + '</span></td>\
                            <td class="clstdEdit"><center><span class="fileedit zmdi zmdi-edit" style="cursor:pointer;color:#0095eb;font-size: 1.5em;"></span></center></td>\
                            <td class="clstdDelete"><center><span class="filedelete zmdi zmdi-delete" style="cursor:pointer;color:red;font-size: 1.5em;"></span></center></td>\
                            <td><center><span class="dnload zmdi zmdi-format-valign-bottom zmdi-hc-2x" fileid="' + j.ATTACH_HEADER_ID + '" style="cursor: pointer;color:#0095eb;"></span></center></td></tr>');
                            }

                        });
                        //Append Dispute Attachment Osama
                        debugger;
                        $.each(JSON.parse(data.DispAttach), function (i, j) {
                            var dispData = JSON.parse(data.DispAttach);
                            if (dispData.length != 0) {
                                if (dispData[i].SHOW_ON_PORTAL == 'Y') {
                        //            $('.clsDispDiv').show();
                        //            if (dispData[i].File_Name != null && dispData[i].File_Name != "") {
                        //                $("#tbl_dispute_attach > tbody").append('<tr class="files" fileid="' + dispData[i].Dispute_Attach_Id + '"  fname="' + dispData[i].File_Name + '" fdescription="' + dispData[i].File_Name + '"  base64="">\
                        //<td><span>' + dispData[i].File_Name + '</span></td>\
                        //<td><center><span class="dnloadDisp zmdi zmdi-format-valign-bottom zmdi-hc-2x" filedata="1" fileid="' + dispData[i].DISP_ATT_PK + '" style="cursor: pointer;color:#0095eb;"></span></center></td></tr>');
                        //            }


                        //            $("textarea#disputeNotes").val(dispData[0].DISPUTE_REMARKS);


                                    if (dispData[i].File_Link != null) {
                                        $('.clsDispDiv').show();
                                        if (dispData[i].File_Name != null && dispData[i].File_Name != "") {
                                            $("#tbl_dispute_attach > tbody").append('<tr class="files" fileid="' + dispData[i].Dispute_Attach_Id + '"  fname="' + dispData[i].File_Name + '" fdescription="' + dispData[i].File_Name + '"  base64="">\
                        <td><span>' + dispData[i].File_Name + '</span></td>\
                        <td><center><a target="_blank" style ="color:blue;" href="' + dispData[i].File_Link + '">' + '<span class="zmdi zmdi-format-valign-bottom zmdi-hc-2x" filedata="1" fileid="' + dispData[i].DISP_ATT_PK + '" style="cursor: pointer;color:#0095eb;"></span></center></td></tr>');
                                        }
                                        $("textarea#disputeNotes").val(dispData[0].DISPUTE_REMARKS);
                                    }
                                    else {
                                        $('.clsDispDiv').show();
                                        if (dispData[i].File_Name != null && dispData[i].File_Name != "") {
                                            $("#tbl_dispute_attach > tbody").append('<tr class="files" fileid="' + dispData[i].Dispute_Attach_Id + '"  fname="' + dispData[i].File_Name + '" fdescription="' + dispData[i].File_Name + '"  base64="">\
                        <td><span>' + dispData[i].File_Name + '</span></td>\
                        <td><center><span class="dnloadDisp zmdi zmdi-format-valign-bottom zmdi-hc-2x" filedata="1" fileid="' + dispData[i].DISP_ATT_PK + '" style="cursor: pointer;color:#0095eb;"></span></center></td></tr>');
                                        }
                                    }

                                    $("textarea#disputeNotes").val(dispData[0].DISPUTE_REMARKS);
                                }
                            }
                        });

                        $('.clstdEdit, .clstdDelete').hide();
                        if (data.UserDtl.utyp == "4") {
                            if (data.DHIHDR.APPROVED_STATUS == "Submitted" || data.DHIHDR.APPROVED_STATUS == "Received" || data.DHIHDR.APPROVED_STATUS == "Verified" || data.DHIHDR.APPROVED_STATUS == "Fully Paid" || data.DHIHDR.APPROVED_STATUS == "Partially Paid") {
                                $('#btnClear').parent().parent().hide();
                                $('#btnAddFiles, .btn-blk-delete, .filedelete, #btnAddRow').hide();
                                $('#addblockrow').parent().hide();
                                $('#prevTxtAreaRemarks').parent().hide();
                                //$('#rmxDisplay').parent().parent().append('<div style="width:100%;padding-top: 35px;text-align: right;"><a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');
                                $('#rmxDisplayNew').parent().parent().append('<div style="width:100%;padding-top: 35px;text-align: right;"><a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');
                            }
                            else {
                                $('#btnClear').parent().parent().hide();
                                $('#btnAddFiles, .btn-blk-delete, .filedelete, #btnAddRow').hide();
                                $('#addblockrow').parent().hide();
                                $('#prevTxtAreaRemarks').parent().hide();
                                //$('#rmxDisplay').parent().parent().append('<div class="dynDiv" style="width:100%;padding-top: 35px;text-align: right;"><button type="button" class="btn btn-success btn-anim btnEdit">Edit</button> <a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');
                                $('#rmxDisplayNew').parent().parent().append('<div class="dynDiv" style="width:100%;padding-top: 35px;text-align: right;"><button type="button" class="btn btn-success btn-anim btnEdit">Edit</button> <a style="color: white;" class="btn btn-danger btnCloseD" href="#">Close</a></div>');

                                if (data.DHIHDR.APPROVED_STATUS == "Returned") {
                                    $('#btnWithDraw').parent().show();
                                }
                                if (data.DHIHDR.APPROVED_STATUS == "Withdraw" || data.DHIHDR.APPROVED_STATUS == "Claim Returned") {
                                    $('.btnEdit').remove();
                                }
                            }
                        }
                        $('#hardCopyTR').hide();
                        if (data.UserDtl.utyp == "1" || data.UserDtl.utyp == "16") {
                            TechnicalHide();
                        }
                        else if (data.UserDtl.uid == 428) {
                            debugger;
                            $('#hardCopyTR').hide();
                            TechnicalHide();
                        }
                        else if (data.UserDtl.utyp == "2") {
                            if (data.DHIHDR.APPROVED_STATUS == "Submitted" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "1") {
                                $('#status').val('Forwarded to Finance');
                                $('#statusV').html('Forwarded to Finance');
                                TechnicalHide();
                            }
                            if (data.DHIHDR.APPROVED_STATUS == "Submitted" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "0") {
                                $('#status').val('Return to Power Producer');
                                $('#statusV').html('Return to Power Producer');
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Received" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "1") {
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Returned" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "0") {
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Returned" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "1") {
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Returned" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == null) {
                                TechnicalHide();
                            }

                            else if (data.DHIHDR.APPROVED_STATUS == "Verified" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == 1) {
                                TechnicalHide();
                            }

                            else if (data.DHIHDR.APPROVED_STATUS == "Fully Paid" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == 1) {
                                TechnicalHide();
                            }

                            else if (data.DHIHDR.APPROVED_STATUS == "Claim Returned" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == 1) {
                                TechnicalHide();
                            }


                            else if (data.DHIHDR.APPROVED_STATUS == "Submitted" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == "0") {
                                $('#status').val('Returned by Technical');
                                $('#statusV').html('Received by Technical');
                                //showBtns(data);
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Submitted" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == null) {
                                showBtns(data);
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Received" && data.DHIHDR.IS_APPROVED_BY_TECHNICAL == null) {
                                showBtns(data);
                            }
                        }
                        if (data.UserDtl.utyp == "3") {
                            if (data.UserDtl.uid != 428) {
                                $('#hardCopyTR').show();
                            }
                            if (data.DHIHDR.APPROVED_STATUS != 'Submitted') {
                                $('#hardCopySub').prop('disabled', true);
                                $('#hardCopySubTime').prop('disabled', true);
                                $('#hardCopyType').prop('disabled', true);
                            }
                            else {
                                $('#hardCopySub').prop('disabled', false);
                                $('#hardCopySubTime').prop('disabled', false);
                                $('#hardCopyType').prop('disabled', false);
                            }
                            if (data.DHIHDR.APPROVED_STATUS == "Received" && data.DHIHDR.IS_APPROVED_BY_FINANCE == "1") {
                                $('#status').val('Received by Finance');
                                $('#statusV').html('Received by Finance');
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Returned" && data.DHIHDR.IS_APPROVED_BY_FINANCE == "0") {
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Returned" && data.DHIHDR.IS_APPROVED_BY_FINANCE == "1") {
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Returned" && data.DHIHDR.IS_APPROVED_BY_FINANCE == null) {
                                TechnicalHide();
                            }

                            else if (data.DHIHDR.APPROVED_STATUS == "Verified" && data.DHIHDR.IS_APPROVED_BY_FINANCE == 1) {
                                TechnicalHide();
                            }

                            else if (data.DHIHDR.APPROVED_STATUS == "Fully Paid" && data.DHIHDR.IS_APPROVED_BY_FINANCE == 1) {
                                TechnicalHide();
                            }

                            else if (data.DHIHDR.APPROVED_STATUS == "Claim Returned" && data.DHIHDR.IS_APPROVED_BY_FINANCE == 1) {
                                TechnicalHide();
                            }


                            else if (data.DHIHDR.APPROVED_STATUS == "Submitted" && data.DHIHDR.IS_APPROVED_BY_FINANCE == "0") {
                                $('#status').val('Returned by Finance');
                                $('#statusV').html('Return by Finance');
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Submitted" && data.DHIHDR.IS_APPROVED_BY_FINANCE == "1") {
                                $('#status').val('Received by Finance');
                                $('#statusV').html('Received by Finance');
                                TechnicalHide();
                            }
                            else if (data.DHIHDR.APPROVED_STATUS == "Submitted" && data.DHIHDR.IS_APPROVED_BY_FINANCE == null && data.UserDtl.uid != 428) {
                                showBtns(data);
                            }

                            else if (data.DHIHDR.APPROVED_STATUS == "Received" && data.DHIHDR.IS_APPROVED_BY_FINANCE == null && data.UserDtl.uid != 428) {
                                showBtns(data);
                            }
                        }

                        if (LoadFor == "V") {

                            $('.txtClaimFin, .txtBlockRemarks, .dtfrom, .dtToDate, .txtGSTFin, .txtClaimTech, .txtCompFinRemarks').prop('disabled', true);
                        }
                        if (LoadFor == "E" && data.UserDtl.utyp == "4") {
                            $($('.btnEdit')[0]).click();
                        }

                        $('#totalClaimV').html($('#totalClaim').val());

                        $('#invoicePeriodFrom').datepicker("option", { setDate: null, minDate: null, maxDate: null });
                        $('#invoicePeriodTo').datepicker("option", { setDate: null, minDate: null, maxDate: null });
                        $('#invoiceDueDate').datepicker("option", { setDate: null, minDate: null, maxDate: null });

                        $('#invoicePeriodTo').datepicker('option', 'minDate', data.DHIHDR.INVOICE_PERIOD_FROM);
                        $('#invoiceDueDate').datepicker('option', 'minDate', data.DHIHDR.INVOICE_PERIOD_FROM);

                        $('#btnSave').attr('tg', data.DHIHDR.DIARY_HEADER_ID);

                        if (data.DHIHDR.INVOICE_TYPES == 'Capacity Purchase Price') {
                            $('.gstTD').hide();
                            $('.gstHeadV').hide();
                        }
                        else if (data.DHIHDR.INVOICE_TYPES == 'Bonus') {
                            $('.gstTD').hide();
                            $('.gstHeadV').hide();
                        }
                        else {
                            $('.gstTD').show();
                            $('.gstHeadV').show();
                        }

                    },//END OF AJAX SUCCESS
                    error: function (request, textStatus, errorThrown) {

                        $.unblockUI();
                    }
                });//END OF AJAX CALL
            }//End of load invoice method

            function getParameterByName(name, url) {
                /*if (!url) url = window.location.href;
                name = name.replace(/[\[\]]/g, '\\$&');
                var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                    results = regex.exec(url);
                if (!results) return null;
                if (!results[2]) return '';
                return decodeURIComponent(results[2].replace(/\+/g, ' '));*/
                // return sessionStorage.getItem(name);
                // debugger;
                var ret = sessionStorage.getItem(name);
                sessionStorage.removeItem(name);
                return ret;
            }

            $('body').off('click', '#btnCancel, .btnCloseD');
            $('body').on('click', '#btnCancel, .btnCloseD', function (e) {
                e.preventDefault();
                //    // location.href = _spPageContextInfo.webAbsoluteUrl + "/Pages/Home.aspx";
                goToHome();
            });//End of edit click
            function goToHome() {
                var options = {};
                var $id = "0½0";
                var fromdata = new FormData();
                fromdata.append('vls', $id);
                $("#pageContainer").hide('slide', options, 300);
                $.ajax({
                    type: "POST",
                    data: fromdata,
                    contentType: false,
                    processData: false,
                    url: "/Invoice/IppDashboard" + $(location).attr('search'),

                    success: function (result) {
                        var options = {};
                        $('#pageContainer').html($(result).find('#pcontent').html());
                        $("#pageContainer").show('slide', options, 500);
                    }
                });
            }

            LoadMonthlyInvoiceByID();

            $('body').off('click', '#btnWithDraw');
            $('body').on('click', '#btnWithDraw', function (e) {
                var $val = $(this).attr('tg');
                var $id = $(this).attr('dhiid');

                if ($val == "Returned" && $('#prevTxtAreaRemarks').val() == '') {
                    swal({
                        title: "Error",
                        text: "Please enter notes!",
                        type: "warning",
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK",
                        showCancelButton: false
                        //,onAfterClose: () => {
                        //    setTimeout(() => $('#prevTxtAreaRemarks').focus(), 100);
                        //}
                    }, function () { setTimeout(() => $('#prevTxtAreaRemarks').focus(), 100); });
                    return false;
                }

                swal({
                    title: "Are you sure?",
                    text: "",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn btn-danger",
                    confirmButtonText: "Yes, Continue",
                    cancelButtonText: "No, cancel"
                },
                    function () {
                        e.preventDefault();
                        var $myForm = $('#btnSave').attr('tg');

                        var fromdata = new FormData();
                        fromdata.append("strFormData", $myForm);
                        var choice = {};
                        //choice.url = "https://cppa2.azurewebsites.net/v1/invoice/Withdraw";
                        choice.url = "/Invoice/Withdraw" + $(location).attr("search");
                        choice.type = "POST";
                        choice.data = fromdata;
                        //choice.headers = { "Token": Token };
                        choice.contentType = false;
                        choice.processData = false;
                        choice.beforeSend = function () {
                            $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                        };
                        choice.complete = function () {
                            $.unblockUI();
                        };
                        choice.success = function (result) {

                            if (result == "1") {
                                swal({
                                    title: "Invoice!",
                                    text: "Invoice has been withdrawn successfully.",
                                    type: "success",
                                    showCancelButton: false,
                                    showConfirmButton: true
                                }, function () {
                                    goToHome();
                                });

                                /*swal("Invoice!", "Invoice has been " + $val + " successfully.", "success", {
                                    button: "Continue!",
                                });*/
                                /////////DASHBOARD location.href = _spPageContextInfo.webAbsoluteUrl + "/Pages/Home.aspx";
                                return false;
                            }
                            else {
                                swal({
                                    title: "Error!",
                                    text: result,
                                    type: "warning"
                                });
                            }

                        };
                        choice.error = function (err) {
                            console.log(err.statusText);
                        };
                        $.ajax(choice);
                        swal("Complete!", "", "success");
                    }
                );

                //    .then((result) => {
                //    if (result.value) {


                //    } else {
                //        swal("Cancelled!", "", "error");
                //    }
                //});
            });// end of btnWithDraw button

            /////////
            $('#dvAdjustmentAdd').dialog({
                autoOpen: false,
                height: 215,
                width: 650,
                modal: true,
                show: {
                    effect: "clip",
                    duration: 500
                },
                hide: {
                    effect: "clip",
                    duration: 500
                }
            });





            $('body').off('click', '#btnAddAdjustment');
            $('body').on('click', '#btnAddAdjustment', function (e) {
                e.preventDefault();
                $('.adj').val('');
                $(this).attr('typ', '0');
                $(this).attr('tg', '0');
                $('#dvAdjustmentAdd').dialog('open');
                $(this).prop('disabled', false);
            });//end of btnAddFiles

            $('body').off("click", '#btnCloseDialogAdj');
            $('body').on("click", '#btnCloseDialogAdj', function (e) {
                e.preventDefault();
                $('#dvAdjustmentAdd').dialog('close');
                $('.adj').val('');
            });

            function loadAdjInvDll() {
                var fromdata = new FormData();
                fromdata.append("vls", '4½' + $('#producerSite').val() + '½' + $('#invoiceType').val());
                $.ajax
                    ({
                        type: "POST",
                        url: "/Invoice/AjaxCall" + $(location).attr("search"),
                        data: fromdata,
                        contentType: false,
                        processData: false,
                        //url: "https://cppa2.azurewebsites.net/v1/PPABlkFuel/Adjdll?VENDOR_SITE_ID_FK=" + $('#producerSite').val() + "&ppaInvTypeID=" + $('#invoiceType').val(),
                        //dataType: 'json',
                        //headers: {
                        //    "Token": Token
                        //},
                        beforeSend: function () {
                            $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                        },
                        complete: function () {
                            $.unblockUI();
                        },
                        success: function (data) {
                            //if ($('#ddlPrefInvoice').hasClass('selectized')) {
                            //    $('#ddlPrefInvoice')[0].selectize.destroy();
                            //}
                            $("#ddlPrefInvoice").html(data);
                            //$("#ddlPrefInvoice").selectize();
                        },//end of ajax success
                        error: function (request, textStatus, errorThrown) {
                        }
                    });
            }// end of loadAdjInvDll


            $('body').off('click', '#btnSaveAdj');
            $('body').on('click', '#btnSaveAdj', function (e) {
                e.preventDefault();
                if ($('#ddlPrefInvoice').val() == "0" || $('#ddlPrefInvoice').val() == "" || $('#ddlPrefInvoice').val() == null || $('#ddlPrefInvoice').val() == undefined) {

                    swal({
                        title: "Error",
                        text: "Please select REFERENCE INVOICE!",
                        type: "warning",
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK",
                        showCancelButton: false

                    });

                    return false;
                }
                if ($('#txtAdjAmount').val() == "0" || $('#txtAdjAmount').val() == "0.0000" || $('#txtAdjAmount').val() == "") {
                    swal({
                        title: "Error",
                        text: "Please select REFERENCE INVOICE!",
                        type: "warning",
                        confirmButtonClass: "btn btn-danger",
                        confirmButtonText: "OK",
                        showCancelButton: false
                    });
                    return false;
                }
                if ($(this).attr('typ') == '0') {

                    $(this).prop('disabled', true);
                    $('#tblADJ tbody').append('<tr aid="0">\
<td>'+ $('#ddlPrefInvoice').val() + '</td>\
<td>'+ $($('.adj')[0]).val() + '</td>\
<td>'+ $($('.adj')[1]).val() + '</td>\
<td>'+ $($('.adj')[6]).val() + '</td>\
<td class="clsAJDEdit"><center><span class="adjedit zmdi zmdi-edit" style="cursor:pointer;color:#0095eb;font-size: 1.5em;"></span></center></td>\
<td class="clsAJDDelete"><center><span class="adjdelete zmdi zmdi-delete" style="cursor: pointer; color: red; font-size: 1.5em; display: inline-block;"></span></center></td>\
');
                }
                else {
                    $(this).prop('disabled', true);
                    var $tds = $('#tblADJ tbody tr[biseditadj="biseditadj"]').find('td');
                    $($tds[0]).html($('#ddlPrefInvoice').val());
                    $($tds[1]).html($($('.adj')[0]).val());
                    $($tds[2]).html($($('.adj')[1]).val());
                    $($tds[3]).html($($('.adj')[6]).val());
                }
                $('#dvAdjustmentAdd').dialog('close');
            }); //END OF CLICK

            $('body').off('click', '.adjdelete');
            $('body').on('click', '.adjdelete', function (e) {
                e.preventDefault();
                var aid = $(this).parent().parent().parent().attr('aid');
                if (aid != "0") {
                    var pdlist = "";
                    try {
                        pdlist = $('#tblADJ').attr('adjdellist');
                        if (pdlist == "") {
                            pdlist = aid;
                        }
                        else {
                            pdlist = pdlist + '½' + aid;
                        }
                        $('#tblADJ').attr('adjdellist', pdlist);
                    } catch (e) {
                        pdlist = aid;
                        $('#tblADJ').attr('adjdellist', pdlist);
                    }
                }
                $(this).parent().parent().parent().remove();
            });//END OF DELETE BUTNN

            $('body').off('click', '.adjedit');
            $('body').on('click', '.adjedit', function (e) {
                e.preventDefault();
                var aid = $(this).parent().parent().parent().attr('aid');
                var $tr = $(this).parent().parent().parent();
                $('#tblADJ tbody tr').removeAttr('biseditadj');
                $tr.attr('biseditadj', 'biseditadj');
                //$('#attachmentTitle').val($tr.attr('ftitle'));
                //$('#attachmentDesc').val($tr.attr('fdescription'));
                //$('#btnUpload').attr('tg', aid);
                $('#ddlPrefInvoice').val($($tr.find('td')[0]).html());

                //if ($('#ddlPrefInvoice').hasClass('selectized')) {
                //    $('#ddlPrefInvoice')[0].selectize.destroy();
                //}
                $("#ddlPrefInvoice").val($($tr.find('td')[0]).html());
                //$("#ddlPrefInvoice").selectize();
                $($('.adj')[0]).val($($tr.find('td')[1]).html());
                $($('.adj')[1]).val($($tr.find('td')[2]).html());
                $($('.adj')[6]).val($($tr.find('td')[3]).html());

                $('#btnSaveAdj').attr('typ', "1");
                $('#dvAdjustmentAdd').dialog('open');
                $($('.adj')[0]).focus();
                $('#ddlPrefInvoice').next().find('.selectize-dropdown').hide();
                $($('#ddlPrefInvoice').next().find('.selectize-input')[0]).removeClass('dropdown-active');
                $(this).prop('disabled', false);
            });//END OF Edit BUTNN


            //Alina Start
                if (currentUserType == 2 || currentUserType == 3 || currentUserType == 4 || currentUserType == 1 || currentUserType == 16) {
                $("#DownAll").show();
            }
            else {
                $("#DownAll").hide();
            }
            $('body').off('click', '#DownAll');
            $('body').on('click', '#DownAll', function (e) {
                debugger;



                var ajax = new XMLHttpRequest();
                ajax.open("Get", "/Invoice/DownloadMultipleFiles?DataId=" + tempDHI, true);
                ajax.responseType = "blob";
                ajax.onreadystatechange = function () {
                    if (this.readyState == 4) {
                        debugger;
                        var blob = new Blob([this.response], { type: "application/zip" });
                        var fileName = "AllFiles.zip";
                        saveAs(blob, fileName);
                        $.unblockUI();
                    }
                };
                $.blockUI({ css: { backgroundColor: 'rgb(170, 170, 170)', color: '#fff' } });
                ajax.send(null);



            }); //end of button event
                //Alina Ends

            });//END OF DOC READY

        String.prototype.FormatRow = function () {
            try {
                var content = this;
                for (var i = 0; i < arguments.length; i++) {
                    var replacement = '{' + i + '}';
                    content = content.replace(replacement, arguments[i]);
                }
                return content;
            }
            catch (e) {
                console.log("Error occurred in FormatRow " + e.message);
            }
        }
    </script>
</div>
